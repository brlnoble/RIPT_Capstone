{"version":3,"file":"static/js/main.00a8eade.js","mappings":"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","sources":["../node_modules/react-collapsible/dist/index.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@remix-run/router/history.ts","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@remix-run/router/utils.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@remix-run/router/router.ts","../node_modules/react-router/lib/use-sync-external-store-shim/useSyncExternalStoreShimClient.ts","../node_modules/react-router/lib/use-sync-external-store-shim/index.ts","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router-dom/index.tsx","../node_modules/react-router-dom/dom.ts","Images/Logo_icon.svg","Images/RIPT_Text.svg","Images/Icons/account_icon_unselect.svg","Images/Icons/menu_icon.svg","Components/Navbar.js","webpack://ript/./src/CSS/Footer.module.css?4f04","Images/Icons/github_icon.svg","Components/Footer.js","Pages/layout.js","Components/ListBox.js","Pages/Home.js","webpack://ript/./src/CSS/Profile/ProfileBox.module.css?f6ab","Components/Profile/ProfileBox.js","webpack://ript/./src/CSS/Profile/AverageBox.module.css?a3b7","Components/Profile/AverageBox.js","Pages/Profile.js","webpack://ript/./src/CSS/Session/SessionBoxHeader.module.css?54fa","Images/Icons/expand_icon.svg","Components/Sessions/SessionBoxHeader.js","Components/Sessions/QuadBox.js","Components/Sessions/MetricBreakdown.js","Components/Sessions/PunchMetrics.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.js","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.js","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.bar.js","../node_modules/chart.js/src/controllers/controller.bubble.js","../node_modules/chart.js/src/controllers/controller.doughnut.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/controllers/controller.polarArea.js","../node_modules/chart.js/src/controllers/controller.pie.js","../node_modules/chart.js/src/controllers/controller.radar.js","../node_modules/chart.js/src/controllers/controller.scatter.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/elements/element.arc.ts","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/elements/element.bar.js","../node_modules/chart.js/src/plugins/plugin.colors.ts","../node_modules/chart.js/src/plugins/plugin.decimation.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/chart.js/src/scales/scale.timeseries.js","../node_modules/chart.js/src/index.ts","../node_modules/chart.js/auto/auto.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","Components/LineChart.js","Components/Sessions/MetricPerformance.js","Components/Sessions/SessionBox.js","Components/Sessions/FilterForm.js","Pages/Sessions.js","Pages/Trends.js","Pages/About.js","Pages/SignIn.js","Pages/NoPage.js","Pages/Technical.js","UserData/userData.js","index.js"],"sourcesContent":["!function(e,t){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=t(require(\"react\"));else if(\"function\"==typeof define&&define.amd)define([\"react\"],t);else{var n=\"object\"==typeof exports?t(require(\"react\")):t(e.react);for(var r in n)(\"object\"==typeof exports?exports:e)[r]=n[r]}}(this,(function(e){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=4)}([function(e,t,n){e.exports=n(2)()},function(t,n){t.exports=e},function(e,t,n){\"use strict\";var r=n(3);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,n,o,i,s){if(s!==r){var a=new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");throw a.name=\"Invariant Violation\",a}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return n.PropTypes=n,n}},function(e,t,n){\"use strict\";e.exports=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\"},function(e,t,n){\"use strict\";n.r(t);var r=n(1),o=n.n(r),i=n(0),s=n.n(i),a=function(e){return 0!==e};function l(){return(l=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function c(e){return(c=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e})(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t){return(u=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e})(e,t)}function g(e){var t=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=d(e);if(t){var o=d(this).constructor;n=Reflect.construct(r,arguments,o)}else n=r.apply(this,arguments);return f(this,n)}}function f(e,t){if(t&&(\"object\"===c(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return h(e)}function h(e){if(void 0===e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return e}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var m=function(e){!function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,\"prototype\",{writable:!1}),t&&u(e,t)}(s,e);var t,n,r,i=g(s);function s(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,s),b(h(t=i.call(this,e)),\"continueOpenCollapsible\",(function(){var e=h(t).innerRef;t.setState({height:e.scrollHeight,transition:\"height \".concat(t.props.transitionTime,\"ms \").concat(t.props.easing),isClosed:!1,hasBeenOpened:!0,inTransition:a(e.scrollHeight),shouldOpenOnNextCycle:!1})})),b(h(t),\"handleTriggerClick\",(function(e){t.props.triggerDisabled||t.state.inTransition||(e.preventDefault(),t.props.handleTriggerClick?t.props.handleTriggerClick(t.props.accordionPosition):!0===t.state.isClosed?(t.openCollapsible(),t.props.onOpening(),t.props.onTriggerOpening()):(t.closeCollapsible(),t.props.onClosing(),t.props.onTriggerClosing()))})),b(h(t),\"handleTransitionEnd\",(function(e){e.target===t.innerRef&&(t.state.isClosed?(t.setState({inTransition:!1}),t.props.onClose()):(t.setState({height:\"auto\",overflow:t.props.overflowWhenOpen,inTransition:!1}),t.props.onOpen()))})),b(h(t),\"setInnerRef\",(function(e){return t.innerRef=e})),t.timeout=void 0,t.contentId=e.contentElementId||\"collapsible-content-\".concat(Date.now()),t.triggerId=e.triggerElementProps.id||\"collapsible-trigger-\".concat(Date.now()),e.open?t.state={isClosed:!1,shouldSwitchAutoOnNextCycle:!1,height:\"auto\",transition:\"none\",hasBeenOpened:!0,overflow:e.overflowWhenOpen,inTransition:!1}:t.state={isClosed:!0,shouldSwitchAutoOnNextCycle:!1,height:0,transition:\"height \".concat(e.transitionTime,\"ms \").concat(e.easing),hasBeenOpened:!1,overflow:\"hidden\",inTransition:!1},t}return t=s,(n=[{key:\"componentDidUpdate\",value:function(e,t){var n=this;this.state.shouldOpenOnNextCycle&&this.continueOpenCollapsible(),\"auto\"!==t.height&&0!==t.height||!0!==this.state.shouldSwitchAutoOnNextCycle||(window.clearTimeout(this.timeout),this.timeout=window.setTimeout((function(){n.setState({height:0,overflow:\"hidden\",isClosed:!0,shouldSwitchAutoOnNextCycle:!1})}),50)),e.open!==this.props.open&&(!0===this.props.open?(this.openCollapsible(),this.props.onOpening()):(this.closeCollapsible(),this.props.onClosing()))}},{key:\"componentWillUnmount\",value:function(){window.clearTimeout(this.timeout)}},{key:\"closeCollapsible\",value:function(){var e=this.innerRef;this.setState({shouldSwitchAutoOnNextCycle:!0,height:e.scrollHeight,transition:\"height \".concat(this.props.transitionCloseTime?this.props.transitionCloseTime:this.props.transitionTime,\"ms \").concat(this.props.easing),inTransition:a(e.scrollHeight)})}},{key:\"openCollapsible\",value:function(){this.setState({inTransition:a(this.innerRef.scrollHeight),shouldOpenOnNextCycle:!0})}},{key:\"renderNonClickableTriggerElement\",value:function(){var e=this.props,t=e.triggerSibling,n=e.classParentString;if(!t)return null;switch(c(t)){case\"string\":return o.a.createElement(\"span\",{className:\"\".concat(n,\"__trigger-sibling\")},t);case\"function\":return t();case\"object\":return t;default:return null}}},{key:\"render\",value:function(){var e=this,t={height:this.state.height,WebkitTransition:this.state.transition,msTransition:this.state.transition,transition:this.state.transition,overflow:this.state.overflow},n=this.state.isClosed?\"is-closed\":\"is-open\",r=this.props.triggerDisabled?\"is-disabled\":\"\",i=!1===this.state.isClosed&&void 0!==this.props.triggerWhenOpen?this.props.triggerWhenOpen:this.props.trigger,s=this.props.contentContainerTagName,a=this.props.triggerTagName,c=this.props.lazyRender&&!this.state.hasBeenOpened&&this.state.isClosed&&!this.state.inTransition?null:this.props.children,p=this.props,u=p.classParentString,g=p.contentOuterClassName,f=p.contentInnerClassName,h=\"\".concat(u,\"__trigger \").concat(n,\" \").concat(r,\" \").concat(this.state.isClosed?this.props.triggerClassName:this.props.triggerOpenedClassName),d=\"\".concat(u,\" \").concat(this.state.isClosed?this.props.className:this.props.openedClassName),b=\"\".concat(u,\"__contentOuter \").concat(g),m=\"\".concat(u,\"__contentInner \").concat(f);return o.a.createElement(s,l({className:d.trim()},this.props.containerElementProps),o.a.createElement(a,l({id:this.triggerId,className:h.trim(),onClick:this.handleTriggerClick,style:this.props.triggerStyle&&this.props.triggerStyle,onKeyPress:function(t){var n=t.key;(\" \"===n&&\"button\"!==e.props.triggerTagName.toLowerCase()||\"Enter\"===n)&&e.handleTriggerClick(t)},tabIndex:this.props.tabIndex&&this.props.tabIndex,\"aria-expanded\":!this.state.isClosed,\"aria-disabled\":this.props.triggerDisabled,\"aria-controls\":this.contentId,role:\"button\"},this.props.triggerElementProps),i),this.renderNonClickableTriggerElement(),o.a.createElement(\"div\",{id:this.contentId,className:b.trim(),style:t,onTransitionEnd:this.handleTransitionEnd,ref:this.setInnerRef,hidden:this.props.contentHiddenWhenClosed&&this.state.isClosed&&!this.state.inTransition,role:\"region\",\"aria-labelledby\":this.triggerId},o.a.createElement(\"div\",{className:m.trim()},c)))}}])&&p(t.prototype,n),r&&p(t,r),Object.defineProperty(t,\"prototype\",{writable:!1}),s}(r.Component);m.propTypes={transitionTime:s.a.number,transitionCloseTime:s.a.number,triggerTagName:s.a.string,easing:s.a.string,open:s.a.bool,containerElementProps:s.a.object,triggerElementProps:s.a.object,contentElementId:s.a.string,classParentString:s.a.string,className:s.a.string,openedClassName:s.a.string,triggerStyle:s.a.object,triggerClassName:s.a.string,triggerOpenedClassName:s.a.string,contentOuterClassName:s.a.string,contentInnerClassName:s.a.string,accordionPosition:s.a.oneOfType([s.a.string,s.a.number]),handleTriggerClick:s.a.func,onOpen:s.a.func,onClose:s.a.func,onOpening:s.a.func,onClosing:s.a.func,onTriggerOpening:s.a.func,onTriggerClosing:s.a.func,trigger:s.a.oneOfType([s.a.string,s.a.element]),triggerWhenOpen:s.a.oneOfType([s.a.string,s.a.element]),triggerDisabled:s.a.bool,lazyRender:s.a.bool,overflowWhenOpen:s.a.oneOf([\"hidden\",\"visible\",\"auto\",\"scroll\",\"inherit\",\"initial\",\"unset\"]),contentHiddenWhenClosed:s.a.bool,triggerSibling:s.a.oneOfType([s.a.string,s.a.element,s.a.func]),tabIndex:s.a.number,contentContainerTagName:s.a.string,children:s.a.oneOfType([s.a.string,s.a.element])},m.defaultProps={transitionTime:400,transitionCloseTime:null,triggerTagName:\"span\",easing:\"linear\",open:!1,classParentString:\"Collapsible\",triggerDisabled:!1,lazyRender:!1,overflowWhenOpen:\"hidden\",contentHiddenWhenClosed:!1,openedClassName:\"\",triggerStyle:null,triggerClassName:\"\",triggerOpenedClassName:\"\",contentOuterClassName:\"\",contentInnerClassName:\"\",className:\"\",triggerSibling:null,onOpen:function(){},onClose:function(){},onOpening:function(){},onClosing:function(){},onTriggerOpening:function(){},onTriggerClosing:function(){},tabIndex:null,contentContainerTagName:\"div\",triggerElementProps:{}};t.default=m}])}));","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/RIPT_Capstone/\";","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nfunction warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\nexport type MutationFormMethod = \"post\" | \"put\" | \"patch\" | \"delete\";\nexport type FormMethod = \"get\" | MutationFormMethod;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\";\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport interface Submission {\n  formMethod: FormMethod;\n  formAction: string;\n  formEncType: FormEncType;\n  formData: FormData;\n}\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<Response> | Response | Promise<any> | any;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    formData?: Submission[\"formData\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  parentPath: number[] = [],\n  allIds: Set<string> = new Set<string>()\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !allIds.has(id),\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n    allIds.add(id);\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = { ...route, id };\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        id,\n        children: route.children\n          ? convertRoutesToDataRoutes(route.children, treePath, allIds)\n          : undefined,\n      };\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  return (\n    path\n      .replace(\n        /^:(\\w+)(\\??)/g,\n        (_, key: PathParam<Path>, optional: string | undefined) => {\n          let param = params[key];\n          if (optional === \"?\") {\n            return param == null ? \"\" : param;\n          }\n          if (param == null) {\n            invariant(false, `Missing \":${key}\" param`);\n          }\n          return param;\n        }\n      )\n      .replace(\n        /\\/:(\\w+)(\\??)/g,\n        (_, key: PathParam<Path>, optional: string | undefined) => {\n          let param = params[key];\n          if (optional === \"?\") {\n            return param == null ? \"\" : `/${param}`;\n          }\n          if (param == null) {\n            invariant(false, `Missing \":${key}\" param`);\n          }\n          return `/${param}`;\n        }\n      )\n      // Remove any optional markers from optional static segments\n      .replace(/\\?/g, \"\")\n      .replace(/(\\/?)\\*/, (_, prefix, __, str) => {\n        const star = \"*\" as PathParam<Path>;\n\n        if (params[star] == null) {\n          // If no splat was provided, trim the trailing slash _unless_ it's\n          // the entire path\n          return str === \"/*\" ? \"/\" : \"\";\n        }\n\n        // Apply the splat\n        return `${prefix}${params[star]}`;\n      })\n  );\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * @private\n */\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging @remix-run/router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, null, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    if (error) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n} from \"./history\";\nimport type {\n  DataResult,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  MutationFormMethod,\n  ShouldRevalidateFunction,\n} from \"./utils\";\nimport {\n  DeferredData,\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  warning,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterNavigateOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  basename?: string;\n  routes: AgnosticRouteObject[];\n  history: History;\n  hydrationData?: HydrationState;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\n/**\n * Options for a navigate() call for a Link navigation\n */\ntype LinkNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n};\n\n/**\n * Options for a navigate() call for a Form navigation\n */\ntype SubmissionNavigateOptions = {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  formMethod?: FormMethod;\n  formEncType?: FormEncType;\n  formData: FormData;\n};\n\n/**\n * Options to pass to navigate() for either a Link or Form navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions =\n  | Omit<LinkNavigateOptions, \"replace\">\n  | Omit<SubmissionNavigateOptions, \"replace\">;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: FormMethod | undefined;\n    formAction: string | undefined;\n    formEncType: FormEncType | undefined;\n    formData: FormData | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: FormMethod;\n    formAction: string;\n    formEncType: FormEncType;\n    formData: FormData;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n  match: AgnosticDataRouteMatch;\n  matches: AgnosticDataRouteMatch[];\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\nconst isServer = !isBrowser;\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(init.routes);\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(\n    dataRoutes,\n    init.history.location,\n    init.basename\n  );\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    !initialMatches.some((m) => m.route.loader) || init.hydrationData != null;\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidate()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations from their actions\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              deleteBlocker(blockerKey!);\n              updateState({ blockers: new Map(router.state.blockers) });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    for (let [key] of blockerFunctions) {\n      deleteBlocker(key);\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers: new Map(state.blockers),\n    });\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(to, opts);\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          deleteBlocker(blockerKey!);\n          updateState({ blockers: new Map(state.blockers) });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(dataRoutes, location, init.basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a mutation submission\n    // For example, on /page#hash and submit a <Form method=\"post\"> which will\n    // default to a navigation to /page\n    if (\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        ...opts.submission,\n      };\n      loadingNavigation = navigation;\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts?: { replace?: boolean }\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation: NavigationStates[\"Submitting\"] = {\n      state: \"submitting\",\n      location,\n      ...submission,\n    };\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        router.basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation;\n    if (!loadingNavigation) {\n      let navigation: NavigationStates[\"Loading\"] = {\n        state: \"loading\",\n        location,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        ...submission,\n      };\n      loadingNavigation = navigation;\n    }\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission\n      ? submission\n      : loadingNavigation.formMethod &&\n        loadingNavigation.formAction &&\n        loadingNavigation.formData &&\n        loadingNavigation.formEncType\n      ? {\n          formMethod: loadingNavigation.formMethod,\n          formAction: loadingNavigation.formAction,\n          formData: loadingNavigation.formData,\n          formEncType: loadingNavigation.formEncType,\n        }\n      : undefined;\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      pendingActionData,\n      pendingError,\n      fetchLoadMatches\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: fetcher && fetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n    revalidatingFetchers.forEach((rf) =>\n      fetchControllers.set(rf.key, pendingNavigationController!)\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      await startRedirectNavigation(state, redirect, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n\n    return {\n      loaderData,\n      errors,\n      ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n        ? { fetchers: new Map(state.fetchers) }\n        : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let matches = matchRoutes(dataRoutes, href, init.basename);\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: href })\n      );\n      return;\n    }\n\n    let { path, submission } = normalizeNavigateOptions(href, opts, true);\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path, match, matches });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher: FetcherStates[\"Submitting\"] = {\n      state: \"submitting\",\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      router.basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      fetchRedirectIds.add(key);\n      let loadingFetcher: FetcherStates[\"Loading\"] = {\n        state: \"loading\",\n        ...submission,\n        data: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, loadingFetcher);\n      updateState({ fetchers: new Map(state.fetchers) });\n\n      return startRedirectNavigation(state, actionResult, {\n        isFetchActionRedirect: true,\n      });\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n\n      nextLocation,\n      abortController.signal\n    );\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(dataRoutes, state.navigation.location, init.basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      data: actionResult.data,\n      ...submission,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      { [match.route.id]: actionResult.data },\n      undefined, // No need to send through errors since we short circuit above\n      fetchLoadMatches\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher: FetcherStates[\"Loading\"] = {\n          state: \"loading\",\n          data: existingFetcher && existingFetcher.data,\n          formMethod: undefined,\n          formAction: undefined,\n          formEncType: undefined,\n          formData: undefined,\n          \" _hasFetcherDoneAnything \": true,\n        };\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        fetchControllers.set(staleKey, abortController);\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      return startRedirectNavigation(state, redirect);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: actionResult.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      ...submission,\n      data: existingFetcher && existingFetcher.data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      router.basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by ou our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      await startRedirectNavigation(state, result);\n      return;\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher: FetcherStates[\"Idle\"] = {\n      state: \"idle\",\n      data: result.data,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    // Check if this an absolute external redirect that goes to a new origin\n    if (\n      ABSOLUTE_URL_REGEX.test(redirect.location) &&\n      isBrowser &&\n      typeof window?.location !== \"undefined\"\n    ) {\n      let newOrigin = init.history.createURL(redirect.location).origin;\n      if (window.location.origin !== newOrigin) {\n        if (replace) {\n          window.location.replace(redirect.location);\n        } else {\n          window.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType, formData } = state.navigation;\n    if (!submission && formMethod && formAction && formData && formEncType) {\n      submission = {\n        formMethod,\n        formAction,\n        formEncType,\n        formData,\n      };\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      submission &&\n      isMutationMethod(submission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...submission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // Otherwise, we kick off a new loading navigation, preserving the\n      // submission info for the duration of this navigation\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: {\n          state: \"loading\",\n          location: redirectLocation,\n          formMethod: submission ? submission.formMethod : undefined,\n          formAction: submission ? submission.formAction : undefined,\n          formEncType: submission ? submission.formEncType : undefined,\n          formData: submission ? submission.formData : undefined,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\"loader\", request, match, matches, router.basename)\n      ),\n      ...fetchersToLoad.map((f) =>\n        callLoaderOrAction(\n          \"loader\",\n          createClientSideRequest(init.history, f.path, request.signal),\n          f.match,\n          f.matches,\n          router.basename\n        )\n      ),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        request.signal,\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        request.signal,\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: fetcher.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): void {\n    let doneKeys = [];\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n    markFetchersDone(doneKeys);\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    state.blockers.set(key, newBlocker);\n    updateState({ blockers: new Map(state.blockers) });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || ((location) => location.key);\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions && getScrollRestorationKey && getScrollPosition) {\n      let userMatches = matches.map((m) =>\n        createUseMatchesMatch(m, state.loaderData)\n      );\n      let key = getScrollRestorationKey(location, userMatches) || location.key;\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  router = {\n    get basename() {\n      return init.basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: {\n    basename?: string;\n  }\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let dataRoutes = convertRoutesToDataRoutes(routes);\n  let basename = (opts ? opts.basename : null) || \"/\";\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"head\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method.toLowerCase();\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"head\" && method !== \"options\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        basename,\n        true,\n        isRouteRequest,\n        requestContext\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !routeMatch?.route.loader) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter((m) => m.route.loader);\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          basename,\n          true,\n          isRouteRequest,\n          requestContext\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return opts != null && \"formData\" in opts;\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  to: To,\n  opts?: RouterNavigateOptions,\n  isFetcher = false\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  let path = typeof to === \"string\" ? to : createPath(to);\n\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  // Create a Submission on non-GET navigations\n  let submission: Submission | undefined;\n  if (opts.formData) {\n    submission = {\n      formMethod: opts.formMethod || \"get\",\n      formAction: stripHashFromPath(path),\n      formEncType:\n        (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n      formData: opts.formData,\n    };\n\n    if (isMutationMethod(submission.formMethod)) {\n      return { path, submission };\n    }\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  let searchParams = convertFormDataToSearchParams(opts.formData);\n  // Since fetcher GET submissions only run a single loader (as opposed to\n  // navigation GET submissions which run all loaders), we need to preserve\n  // any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  pendingActionData?: RouteData,\n  pendingError?: RouteData,\n  fetchLoadMatches?: Map<string, FetchLoadMatch>\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  let defaultShouldRevalidate =\n    // Forced revalidation due to submission, useRevalidate, or X-Remix-Revalidate\n    isRevalidationRequired ||\n    // Clicked the same link, resubmitted a GET form\n    currentUrl.toString() === nextUrl.toString() ||\n    // Search params affect all loaders\n    currentUrl.search !== nextUrl.search;\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        defaultShouldRevalidate ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches &&\n    fetchLoadMatches.forEach((f, key) => {\n      if (!matches.some((m) => m.route.id === f.routeId)) {\n        // This fetcher is not going to be present in the subsequent render so\n        // there's no need to revalidate it\n        return;\n      } else if (cancelledFetcherLoads.includes(key)) {\n        // This fetcher was cancelled from a prior action submission - force reload\n        revalidatingFetchers.push({ key, ...f });\n      } else {\n        // Revalidating fetchers are decoupled from the route matches since they\n        // hit a static href, so they _always_ check shouldRevalidate and the\n        // default is strictly if a revalidation is explicitly required (action\n        // submissions, useRevalidator, X-Remix-Revalidate).\n        let shouldRevalidate = shouldRevalidateLoader(f.match, {\n          currentUrl,\n          currentParams: state.matches[state.matches.length - 1].params,\n          nextUrl,\n          nextParams: matches[matches.length - 1].params,\n          ...submission,\n          actionResult,\n          defaultShouldRevalidate,\n        });\n        if (shouldRevalidate) {\n          revalidatingFetchers.push({ key, ...f });\n        }\n      }\n    });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  basename = \"/\",\n  isStaticRequest: boolean = false,\n  isRouteRequest: boolean = false,\n  requestContext?: unknown\n): Promise<DataResult> {\n  let resultType;\n  let result;\n\n  // Setup a promise we can race against so that abort signals short circuit\n  let reject: () => void;\n  let abortPromise = new Promise((_, r) => (reject = r));\n  let onReject = () => reject();\n  request.signal.addEventListener(\"abort\", onReject);\n\n  try {\n    let handler = match.route[type];\n    invariant<Function>(\n      handler,\n      `Could not find the ${type} to run on the \"${match.route.id}\" route`\n    );\n\n    result = await Promise.race([\n      handler({ request, params: match.params, context: requestContext }),\n      abortPromise,\n    ]);\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    request.signal.removeEventListener(\"abort\", onReject);\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        let activeMatches = matches.slice(0, matches.indexOf(match) + 1);\n        let routePathnames = getPathContributingMatches(activeMatches).map(\n          (match) => match.pathnameBase\n        );\n        let resolvedLocation = resolveTo(\n          location,\n          routePathnames,\n          new URL(request.url).pathname\n        );\n        invariant(\n          createPath(resolvedLocation),\n          `Unable to resolve redirect location: ${location}`\n        );\n\n        // Prepend the basename to the redirect location if we have one\n        if (basename) {\n          let path = resolvedLocation.pathname;\n          resolvedLocation.pathname =\n            path === \"/\" ? basename : joinPaths([basename, path]);\n        }\n\n        location = createPath(resolvedLocation);\n      } else if (!isStaticRequest) {\n        // Strip off the protocol+origin for same-origin absolute redirects.\n        // If this is a static reques, we can let it go back to the browser\n        // as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        if (url.origin === currentUrl.origin) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (result instanceof DeferredData) {\n    return { type: ResultType.deferred, deferredData: result };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType, formData } = submission;\n    init.method = formMethod.toUpperCase();\n    init.body =\n      formEncType === \"application/x-www-form-urlencoded\"\n        ? convertFormDataToSearchParams(formData)\n        : formData;\n  }\n\n  // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, value instanceof File ? value.name : value);\n  }\n\n  return searchParams;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher: FetcherStates[\"Idle\"] = {\n        state: \"idle\",\n        data: result.data,\n        formMethod: undefined,\n        formAction: undefined,\n        formEncType: undefined,\n        formData: undefined,\n        \" _hasFetcherDoneAnything \": true,\n      };\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined) {\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results: DataResult[]): RedirectResult | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return result;\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  return (\n    a.pathname === b.pathname && a.search === b.search && a.hash !== b.hash\n  );\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod {\n  return validRequestMethods.has(method as FormMethod);\n}\n\nfunction isMutationMethod(method?: string): method is MutationFormMethod {\n  return validMutationMethods.has(method as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  signal: AbortSignal,\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n//#endregion\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from \"react\";\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction isPolyfill(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst is: (x: any, y: any) => boolean =\n  typeof Object.is === \"function\" ? Object.is : isPolyfill;\n\n// Intentionally not using named imports because Rollup uses dynamic\n// dispatch for CommonJS interop named imports.\nconst { useState, useEffect, useLayoutEffect, useDebugValue } = React;\n\nlet didWarnOld18Alpha = false;\nlet didWarnUncachedGetSnapshot = false;\n\n// Disclaimer: This shim breaks many of the rules of React, and only works\n// because of a very particular set of implementation details and assumptions\n// -- change any one of them and it will break. The most important assumption\n// is that updates are always synchronous, because concurrent rendering is\n// only available in versions of React that also have a built-in\n// useSyncExternalStore API. And we only use this shim when the built-in API\n// does not exist.\n//\n// Do not assume that the clever hacks used by this hook also work in general.\n// The point of this shim is to replace the need for hacks by other libraries.\nexport function useSyncExternalStore<T>(\n  subscribe: (fn: () => void) => () => void,\n  getSnapshot: () => T,\n  // Note: The shim does not use getServerSnapshot, because pre-18 versions of\n  // React do not expose a way to check if we're hydrating. So users of the shim\n  // will need to track that themselves and return the correct value\n  // from `getSnapshot`.\n  getServerSnapshot?: () => T\n): T {\n  if (__DEV__) {\n    if (!didWarnOld18Alpha) {\n      if (\"startTransition\" in React) {\n        didWarnOld18Alpha = true;\n        console.error(\n          \"You are using an outdated, pre-release alpha of React 18 that \" +\n            \"does not support useSyncExternalStore. The \" +\n            \"use-sync-external-store shim will not work correctly. Upgrade \" +\n            \"to a newer pre-release.\"\n        );\n      }\n    }\n  }\n\n  // Read the current snapshot from the store on every render. Again, this\n  // breaks the rules of React, and only works here because of specific\n  // implementation details, most importantly that updates are\n  // always synchronous.\n  const value = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      const cachedValue = getSnapshot();\n      if (!is(value, cachedValue)) {\n        console.error(\n          \"The result of getSnapshot should be cached to avoid an infinite loop\"\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n\n  // Because updates are synchronous, we don't queue them. Instead we force a\n  // re-render whenever the subscribed state changes by updating an some\n  // arbitrary useState hook. Then, during render, we call getSnapshot to read\n  // the current value.\n  //\n  // Because we don't actually use the state returned by the useState hook, we\n  // can save a bit of memory by storing other stuff in that slot.\n  //\n  // To implement the early bailout, we need to track some things on a mutable\n  // object. Usually, we would put that in a useRef hook, but we can stash it in\n  // our useState hook instead.\n  //\n  // To force a re-render, we call forceUpdate({inst}). That works because the\n  // new object always fails an equality check.\n  const [{ inst }, forceUpdate] = useState({ inst: { value, getSnapshot } });\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  useLayoutEffect(() => {\n    inst.value = value;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe, value, getSnapshot]);\n\n  useEffect(() => {\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceUpdate({ inst });\n    }\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceUpdate({ inst });\n      }\n    };\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [subscribe]);\n\n  useDebugValue(value);\n  return value;\n}\n\nfunction checkIfSnapshotChanged(inst: any) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n","/**\n * Inlined into the react-router repo since use-sync-external-store does not\n * provide a UMD-compatible package, so we need this to be able to distribute\n * UMD react-router bundles\n */\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from \"react\";\n\nimport { useSyncExternalStore as client } from \"./useSyncExternalStoreShimClient\";\nimport { useSyncExternalStore as server } from \"./useSyncExternalStoreShimServer\";\n\nconst canUseDOM: boolean = !!(\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\"\n);\nconst isServerEnvironment = !canUseDOM;\nconst shim = isServerEnvironment ? server : client;\n\nexport const useSyncExternalStore =\n  \"useSyncExternalStore\" in React\n    ? ((module) => module.useSyncExternalStore)(React)\n    : shim;\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  Router as RemixRouter,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history.  If this is a root navigation, then we\n      // navigate to the raw basename which allows the basename to have full\n      // control over the presence of a trailing slash on root links\n      if (basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let dataRouterStateContext = React.useContext(DataRouterStateContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterStateContext || undefined\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorElement() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own&nbsp;\n          <code style={codeStyles}>errorElement</code> props on&nbsp;\n          <code style={codeStyles}>&lt;Route&gt;</code>\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error,\n        location: props.location,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    match.route.errorElement\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for the current errors: ${errors}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = dataRouterState\n      ? match.route.errorElement || <DefaultErrorElement />\n      : null;\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => (\n      <RenderedRoute match={match} routeContext={{ outlet, matches }}>\n        {error\n          ? errorElement\n          : match.route.element !== undefined\n          ? match.route.element\n          : outlet}\n      </RenderedRoute>\n    );\n    // Only wrap in an error boundary within data router usages when we have an\n    // errorElement on this route.  Otherwise let it bubble up to an ancestor\n    // errorElement\n    return dataRouterState && (match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nenum DataRouterStateHook {\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let [blockerKey] = React.useState(() => String(++blockerId));\n\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (args) => {\n      return typeof shouldBlock === \"function\"\n        ? !!shouldBlock(args)\n        : !!shouldBlock;\n    },\n    [shouldBlock]\n  );\n\n  let blocker = router.getBlocker(blockerKey, blockerFunction);\n\n  // Cleanup on unmount\n  React.useEffect(\n    () => () => router.deleteBlocker(blockerKey),\n    [router, blockerKey]\n  );\n\n  return blocker;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  RouterState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  invariant,\n  parsePath,\n  stripBasename,\n  warning,\n} from \"@remix-run/router\";\nimport { useSyncExternalStore as useSyncExternalStoreShim } from \"./use-sync-external-store-shim\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RelativeRoutingType,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n}\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n}: RouterProviderProps): React.ReactElement {\n  // Sync router state to our component state to force re-renders\n  let state: RouterState = useSyncExternalStoreShim(\n    router.subscribe,\n    () => router.state,\n    // We have to provide this so React@18 doesn't complain during hydration,\n    // but we pass our serialized hydration data into the router so state here\n    // is already synced with what the server saw\n    () => router.state\n  );\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider\n        value={{\n          router,\n          navigator,\n          static: false,\n          // Do we need this?\n          basename,\n        }}\n      >\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={router.basename}\n            location={router.state.location}\n            navigationType={router.state.historyAction}\n            navigator={navigator}\n          >\n            {router.state.initialized ? <Routes /> : fallbackElement}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let dataRouterState = React.useContext(DataRouterStateContext);\n  let navigate = useNavigate();\n\n  React.useEffect(() => {\n    // Avoid kicking off multiple navigations if we're in the middle of a\n    // data-router navigation, since components get re-rendered when we enter\n    // a submitting/loading state\n    if (dataRouterState && dataRouterState.navigation.state !== \"idle\") {\n      return;\n    }\n    navigate(to, { replace, state, relative });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  // When in a DataRouterContext _without_ children, we use the router routes\n  // directly.  If we have children, then we're in a descendant tree and we\n  // need to use child routes.\n  let routes =\n    dataRouterContext && !children\n      ? (dataRouterContext.router.routes as DataRouteObject[])\n      : createRoutesFromChildren(children);\n  return useRoutes(routes, location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, parentPath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let treePath = [...parentPath, index];\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      hasErrorBoundary: element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n\n/**\n * @private\n * Walk the route tree and add hasErrorBoundary if it's not provided, so that\n * users providing manual route arrays can just specify errorElement\n */\nexport function enhanceManualRouteObjects(\n  routes: RouteObject[]\n): RouteObject[] {\n  return routes.map((route) => {\n    let routeClone = { ...route };\n    if (routeClone.hasErrorBoundary == null) {\n      routeClone.hasErrorBoundary = routeClone.errorElement != null;\n    }\n    if (routeClone.children) {\n      routeClone.children = enhanceManualRouteObjects(routeClone.children);\n    }\n    return routeClone;\n  });\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  joinPaths,\n  ErrorResponse,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      let error = new Error(val.message);\n      // Wipe away the client-side stack trace.  Nothing to fill it in with\n      // because we don't serialize SSR stack traces for security reasons\n      error.stack = \"\";\n      serialized[key] = error;\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (\n      isBrowser &&\n      typeof to === \"string\" &&\n      /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i.test(to)\n    ) {\n      absoluteHref = to;\n      let currentUrl = new URL(window.location.href);\n      let targetUrl = to.startsWith(\"//\")\n        ? new URL(currentUrl.protocol + to)\n        : new URL(to);\n      if (targetUrl.origin === currentUrl.origin) {\n        // Strip the protocol/origin for same-origin absolute URLs\n        to = targetUrl.pathname + targetUrl.search + targetUrl.hash;\n      } else {\n        isExternal = true;\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as FormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmitImpl = \"useSubmitImpl\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitImpl);\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace/preventScrollReset because they are not\n    // navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"preventScrollReset\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKey\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n","import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method: method.toLowerCase(), encType, formData };\n}\n","var _style, _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLogoIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 800 800\",\n    style: {\n      enableBackground: \"new 0 0 800 800\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#4D4D4D;stroke:#000000;stroke-width:10;stroke-miterlimit:10;}\\r\\n\\t.st1{fill:#FFFFFF;stroke:#000000;stroke-width:10;stroke-miterlimit:10;}\\r\\n\\t.st2{fill:#F15A24;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-miterlimit:10;}\\r\\n\\t.st3{fill:none;stroke:#000000;stroke-width:10;stroke-linecap:round;stroke-miterlimit:10;}\\r\\n\\t.st4{fill:#F15A24;stroke:#000000;stroke-width:10;stroke-miterlimit:10;}\\r\\n\\t.st5{fill:none;stroke:#000000;stroke-width:10;stroke-miterlimit:10;}\\r\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M350.3,336.44c0.7-6.13,1.07-12.35,1.07-18.66c0-5.95-0.33-11.83-0.95-17.62l-35.19-12.51 c-3.2-13.26-8.43-25.73-15.35-37.05l16.15-33.98c-7.5-9.42-16.03-17.98-25.42-25.53l-34.06,16.19 c-11.32-6.92-23.79-12.15-37.05-15.35l-12.68-35.65c-5.9-0.65-11.89-0.99-17.96-0.99s-12.06,0.34-17.96,0.99l-12.68,35.65 c-13.26,3.2-25.73,8.43-37.05,15.35l-34.06-16.19c-9.38,7.55-17.91,16.11-25.42,25.53l16.15,33.98 c-6.92,11.32-12.15,23.79-15.35,37.05l-35.19,12.51c-0.62,5.79-0.95,11.67-0.95,17.62c0,6.31,0.37,12.54,1.07,18.66l35.07,12.47 c3.2,13.26,8.43,25.73,15.35,37.05l-15.86,33.36c7.64,9.53,16.33,18.19,25.9,25.79l33.28-15.82c11.32,6.92,23.79,12.15,37.05,15.35 l12.31,34.61c6.02,0.68,12.13,1.03,18.33,1.03s12.31-0.36,18.33-1.03l12.31-34.61c13.26-3.2,25.73-8.43,37.05-15.35l33.28,15.82 c9.57-7.6,18.26-16.25,25.9-25.79l-15.86-33.36c6.92-11.32,12.15-23.79,15.35-37.05L350.3,336.44z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M525.65,495c-1.21-5.07-2.71-10.13-4.54-15.15c-1.72-4.74-3.68-9.31-5.85-13.74l-31.6,0.21 c-6.38-9.62-14.14-18.03-22.91-25.04l3.03-31.69c-8.69-5.32-17.95-9.67-27.59-12.96l-22.41,22.71c-11.01-2.23-22.43-2.79-33.9-1.51 l-20.38-24.69c-4.88,1.19-9.74,2.64-14.57,4.4s-9.49,3.76-13.99,5.97l0.21,32.01c-9.62,6.38-18.03,14.14-25.04,22.91l-31.77-3.04 c-5.28,8.71-9.59,17.99-12.84,27.65l22.66,22.36c-2.23,11.01-2.79,22.43-1.51,33.9l-24.37,20.11c1.18,4.78,2.61,9.55,4.33,14.29 c1.82,5.02,3.92,9.86,6.24,14.53l31.49-0.21c6.38,9.62,14.14,18.03,22.91,25.04l-2.98,31.11c8.83,5.38,18.24,9.75,28.05,13.03 l21.9-22.19c11.01,2.23,22.43,2.79,33.9,1.51l19.78,23.97c4.98-1.2,9.95-2.68,14.87-4.47c4.93-1.79,9.69-3.84,14.28-6.12 l-0.21-31.08c9.62-6.38,18.03-14.14,25.04-22.91l31.04,2.97c5.42-8.81,9.83-18.2,13.15-27.99l-22.24-21.95 c2.23-11.01,2.79-22.43,1.51-33.9L525.65,495z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 188.37,\n    cy: 318.28,\n    r: 37.5\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M402.7,539.96L402.7,539.96c-9.95,9.57-25.78,9.27-35.35-0.68L173.51,337.85c-9.57-9.95-9.27-25.78,0.68-35.35 l0,0c9.95-9.57,25.78-9.27,35.35,0.68l193.84,201.44C412.95,514.56,412.65,530.39,402.7,539.96z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 392.37,\n    cy: 527.28,\n    r: 37.5\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M376.12,542.03L376.12,542.03c-9.76-9.76-9.76-25.59,0-35.36L491,392l35,35L411.48,542.03 C401.71,551.79,385.88,551.79,376.12,542.03z\"\n  }), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st2\",\n    d: \"M575.87,259.78c9.2-4.05,16.37-12.43,21.76-21.41c3.82-6.36,6.74-13.02,8.85-18.65 c4.8-12.76,4.63-26.97-0.99-39.39c-0.27-0.59-2.65-5.11-3.75-6.72c-7.49-10.94-21.1-19.02-45.87-12.83c-56,14-48,125-48,125 l119,119l118.52-84.91c34.48-23.09,47.48-71.09,28.48-97.09c-19.66-26.91-51.81-54.92-66.81-67.36 c-10.92-9.06-24.32-14.78-38.47-15.78c-18.8-1.33-44.03,7.03-63.71,39.14\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st3\",\n    d: \"M675.87,312.78c-73-5-78-74-78-74\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st4\",\n    d: \"M568.06,468.97L445.68,346.59c-4.87-4.87-4.87-12.76,0-17.63l43.71-43.71c4.87-4.87,12.76-4.87,17.63,0 l122.37,122.37c4.87,4.87,4.87,12.76,0,17.63l-43.71,43.71C580.82,473.83,572.92,473.83,568.06,468.97z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogoIcon);\nexport default __webpack_public_path__ + \"static/media/Logo_icon.68c8811ea8ac8c6d313f58e431f0c0c6.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgRiptText(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    \"data-name\": \"Layer 1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 1744 561\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M247.78,143.38c.37,1.88-.56,2.81-2.81,2.81,1.13,2.24,2.16,2.9,3.1,2a5.32,5.32,0,0,0,1.4-3.93,7.8,7.8,0,0,0-1.69-4.78c-1.12-1.49-3-2.05-5.62-1.68q0-1.12,2.25-2.25c1.5-.75,2.62-.93,3.37-.56s1.31,1.4,1.69,3.09.75,2.53,1.12,2.53,1-.57,2-1.69,1.87-2.15,2.81-3.09,1.78-1.21,2.53-.84,1.12,2.24,1.12,5.62c1.5.37,2.34-.09,2.53-1.41a27.34,27.34,0,0,0,.28-3.93,6.44,6.44,0,0,1,.85-3.37q.84-1.41,4.21.28c1.13,1.5,1,2.24-.28,2.24s-2,.2-2,.57c-.75,1.5-.75,2.72,0,3.65s1.41,1.78,2,2.53.56,1.32,0,1.68-2.16.57-4.78.57q1.13,3.93,2.81,3.93a5.33,5.33,0,0,0,3.38-1.4,12.49,12.49,0,0,0,2.81-3.38c.74-1.31,1.49-2,2.25-2,1.87-.75,2.61-.57,2.24.56s-.19,1.88.56,2.25,2.9-.47,6.47-2.53a27.47,27.47,0,0,0,7.59-5.9q-1.14-2.8-2.25-1.13c-.76,1.13-2.07,1.5-3.94,1.13a3.08,3.08,0,0,1-2.81,2.53c-1.5.19-2.24,1.22-2.24,3.09q-2.82-2.81-11.81-2.81c0-2.62,1.21-3.94,3.66-3.94s4.21-.56,5.33-1.68v-2.81q1.13,0,2.25,1.68a2.84,2.84,0,0,0,3.37,1.13,28.5,28.5,0,0,0,6.75-2.81q5.61-2.81,7.31-2.81c1.12,2.24,2.05,2.24,2.81,0q3.36,0,2,1.68T297,132.14a10.87,10.87,0,0,0-2.53,4.49q-.57,2.25,3.94,3.94,2.81-1.12,1.12-2c-1.12-.56-1.5-1.77-1.12-3.65a6.2,6.2,0,0,1,1.4-2.53,4.36,4.36,0,0,0,.84-3.09c6-.37,9,1.5,9,5.62,1.87-.37,2.61-1.87,2.24-4.5s.57-3.93,2.81-3.93c.75-1.87,1.41-2.53,2-2a2.7,2.7,0,0,1,.84,2c-1.12,0-1.68.65-1.68,2a6.47,6.47,0,0,1-1.13,3.66,29.6,29.6,0,0,1,4.22.28,11,11,0,0,0,4.21-.28,9.2,9.2,0,0,0,4.22-1.41c1.69-.93,2.33-1.4,2-1.4a7.09,7.09,0,0,1,4.77,1.68q2,1.69,3.66,3.09a9.72,9.72,0,0,0,3.65,2c1.31.38,2.9,0,4.78-1.12a2.6,2.6,0,0,0-2-2.81,14.53,14.53,0,0,0-3.93-.57,6.44,6.44,0,0,1-3.38-.84c-.94-.56-.84-2,.28-4.21H326.47c-3,1.5-4.78,2.16-5.34,2s.08-1.77,2-4.77H340c-.37,3,0,4.49,1.13,4.49a13.19,13.19,0,0,0,3.65-.56,10.54,10.54,0,0,1,4.22-.28q2.24.28,2.24,4.78c1.88-.37,2.81-1.41,2.81-3.1s.94-2.52,2.81-2.52c1.5,1.5,3.94,2,7.31,1.4s5.62-.09,6.75,1.41c.36.37.28,1.31-.29,2.81s-.47,2.44.29,2.81,1.87-.19,3.37-1.69a4.36,4.36,0,0,1,5.05-1.12c.75.37.94,1.59.57,3.65s.37,2.72,2.25,2c1.87-.37,2.52-.93,2-1.69a2.42,2.42,0,0,0-2-1.12c.74-1.87,1.4-2.25,2-1.13s1.78,1.5,3.66,1.13a74.83,74.83,0,0,0,8.71,5.34,28.71,28.71,0,0,0,11,3.09,14.25,14.25,0,0,1,2.81,8.43,10.13,10.13,0,0,1,4.49.84l3.94,2a37.76,37.76,0,0,1,8.15,4.21,97.79,97.79,0,0,1,8.71,7c.74.75.93,1.4.56,2s.37.85,2.25.85c.74,0,1.77.66,3.09,2a5.49,5.49,0,0,1,2,3.66c.37,1.88,1.22,2.53,2.53,2a2.27,2.27,0,0,1,3.1.85,12.69,12.69,0,0,1,1.68,4.21,12.14,12.14,0,0,0,1.69,4.22,69,69,0,0,0,5.62,8.71,51.11,51.11,0,0,1,5.06,8.15c.74,1.88.93,3.28.56,4.21a20,20,0,0,1-1.41,2.81l-1.68,2.81a4.68,4.68,0,0,0-.28,3.66c1.49,0,2.24-.65,2.24-2a11.31,11.31,0,0,1,.57-3.65c.36.75,1.49,1.78,3.37,3.09s2.81,2.16,2.81,2.53c0,1.5-.56,2.44-1.69,2.81s-1.68,1.5-1.68,3.37c.74,4.13,1.21,6.46,1.4,7s-.28,2.73-1.4,6.47a55.44,55.44,0,0,0-.85,5.9,10.31,10.31,0,0,1-2,5.34c-.38.75-1.32,1.22-2.81,1.4s-2.25.66-2.25,1.41a2.2,2.2,0,0,0-.28,2.81,3.12,3.12,0,0,1,.28,2.81c-.38.37-2,1-4.78,2a22.6,22.6,0,0,0-7,3.66,13.23,13.23,0,0,0-2.81,4.49,12.23,12.23,0,0,1-2.24,3.94,4.88,4.88,0,0,1-4.22,1.4,4.89,4.89,0,0,0-4.21,1.41c-.76.38-1.32,1.31-1.69,2.81s-.94,2.44-1.69,2.81a5.93,5.93,0,0,1-5.05,0c-1.88-.75-2.81.19-2.81,2.81q-.57,2.82-7.87,4.21a46.22,46.22,0,0,0-11.8,3.66,10.86,10.86,0,0,0-3.1,3.37,7.58,7.58,0,0,1-2.52,2.81,14.48,14.48,0,0,1-7.87,1.12,16.74,16.74,0,0,0-9,1.69c-.75.38-1,.84-.84,1.4s-.47,1-2,1.41a4.53,4.53,0,0,1-1.41-.28,1.28,1.28,0,0,0-1.41.28c-.75.75-1.68,1.78-2.8,3.09s-2.07,2-2.82,2a2.92,2.92,0,0,1-3.09.56,13,13,0,0,0-2.53-.56c-.75,1.5-1.4,2.24-2,2.24a13.76,13.76,0,0,0-3.66,1.13c-1.87.38-4.59,1-8.14,2a29,29,0,0,0-8.72,3.65,15.28,15.28,0,0,1-3.65,1.4c-.94.2-2.53.66-4.78,1.41-1.12.38-2.34.75-3.65,1.12s-2.91.94-4.78,1.69c-1.12.38-2.34.75-3.65,1.12s-2.91.76-4.78,1.13a22.07,22.07,0,0,1-7.86,2.81c-3.75,1.12-8,2.44-12.65,3.93s-9.37,3.19-14,5.06-9.09,3.75-13.21,5.62-7.68,3.56-10.68,5.06c-1.12,2.25-.65,4.21,1.41,5.9a13.68,13.68,0,0,1,4.21,5.34,8,8,0,0,1,0,5.9,8,8,0,0,0,0,5.9q1.13,3.38,2.53,7.87c.93,3,1.78,6,2.53,9a19.12,19.12,0,0,0,3.66,4.78,8.1,8.1,0,0,1,2.53,5.9q0,5.63,2.8,5.62,2.81.57,1.41,2.53c-.94,1.32-.47,3.28,1.41,5.9l2.8,2.81a11.7,11.7,0,0,1,2.25,2.81,12.85,12.85,0,0,1,1.69,6.74,23,23,0,0,0,1.12,7.31,1.83,1.83,0,0,0,2.25.56c.75-.37,1.13.38,1.13,2.25,0,2.25.64,3.75,2,4.5s2.53,3,3.66,6.74c.36.75,1,2.34,2,4.78a41,41,0,0,0,3.09,6.46,15.39,15.39,0,0,0,4.5,3.93,13.1,13.1,0,0,1,4.5,4.5c.74,1.12,1.12,3,1.12,5.62s-.38,3.37-1.12,2.25a4.92,4.92,0,0,0,.56,2.25c.74,1.5,1.49,1.88,2.25,1.12v-3.37a22.15,22.15,0,0,1,11.24,9.27,70,70,0,0,1,5.62,11q4.49-1.12,6.18.56a22.64,22.64,0,0,1,3.09,3.94,14.91,14.91,0,0,0,3.09,3.65c1.12.94,3.37.84,6.74-.28a20.53,20.53,0,0,0,1.69,6.18q1.13,2.24,2,4.22a9.86,9.86,0,0,1,.84,3.93,13,13,0,0,1-1.69,5.34,54.11,54.11,0,0,1-23.6,10.4q-13.48,2.52-24.17.84c.37.37.19.09-.56-.84a3,3,0,0,0-2.25-1.41c-.37-.38-1.12-.47-2.24-.28a18.73,18.73,0,0,1-2.81.28c-.38-.38.08-1.5,1.4-3.37s1.77-2.81,1.41-2.81q-1.14-.57-4.78,1.4a10.92,10.92,0,0,1-7,1.41v-5.62c-1.88-.38-2.62-.1-2.24.84s.18,1.59-.57,2q-6.18-1.69-9.83-3.09a24.35,24.35,0,0,1-6.18-3.37q-2.53-2-.85-4.22a12.89,12.89,0,0,1-9.83.56,39.86,39.86,0,0,1-9.28-4.77,101,101,0,0,1-8.71-6.75,52.55,52.55,0,0,0-8.15-5.9,12.77,12.77,0,0,0,0-5.34c-.37-1.31-.75-2.43-1.12-3.37a6.72,6.72,0,0,1-.56-2.53c0-.75.56-1.69,1.68-2.81-2.24.76-3.65,1.5-4.21,2.25a2.44,2.44,0,0,0-.28,2.53,8.33,8.33,0,0,1,.56,3.09,4.84,4.84,0,0,1-1.69,3.37c-2.24-1.12-3.37-2.43-3.37-3.93a13.64,13.64,0,0,1,1.13-5.06c.74-1.87,1.4-3.74,2-5.62a11.53,11.53,0,0,0,.28-5.62,52.44,52.44,0,0,0-5.9,7.3q-3.09,4.51-8.15-1.12c1.13-3,2.44-3.84,3.94-2.53a10.74,10.74,0,0,0,4.49,2.53q0-5.06-1.4-6.46a4.2,4.2,0,0,0-3.65-1.13c-1.51.2-3.1.38-4.78.57a4.42,4.42,0,0,1-4.22-2q-1.12-4.5.28-6.18a16.92,16.92,0,0,0,2.53-4.5,1.83,1.83,0,0,0-2.24-.56,5.51,5.51,0,0,0-2,1.68,6.36,6.36,0,0,0-1.13,2.53,2.14,2.14,0,0,0,.28,2q-1.12-.56-3.09-3.65c-1.31-2.06-1.22-3.66.29-4.78,1.12-1.12,1.49-1.69,1.12-1.69h-2a10.58,10.58,0,0,1-8.15-4.49q-1.12-8.43,9-7.87c-.76-1.87-2-2.71-3.66-2.53s-2.53,1-2.53,2.53a29.26,29.26,0,0,1-5.34-2.81,29.26,29.26,0,0,0-5.34-2.81q-1.12-5.61-1.68-8.43t4.49-5.62c-.75-1.49-1.4-2.25-2-2.25a3.49,3.49,0,0,0-2,.84,3.7,3.7,0,0,1-2.25.85c-.75,0-1.68-.75-2.81-2.25-1.88-1.49-2.53-2.25-2-2.25a15.84,15.84,0,0,1,3.09.56,37,37,0,0,0,4.49.85,3.11,3.11,0,0,0,3.37-2,8.11,8.11,0,0,0-3.65-4.22,40.69,40.69,0,0,1-4.78-3.09,13.13,13.13,0,0,1-3.65-4.21c-.94-1.69-.84-4.4.28-8.15H164a20.24,20.24,0,0,1-1.4-5.34,13.33,13.33,0,0,0-2-5.34,4.6,4.6,0,0,0-2.53-3.65,4.24,4.24,0,0,1-2.53-2.53,31.84,31.84,0,0,1-1.68-8.15q-.57-5.34-6.75-5.34c-3-.37-4.31.56-3.93,2.81s.75,3,1.12,2.25a10.16,10.16,0,0,1-4.21,4.77,14.23,14.23,0,0,0-4.22,3.66,9,9,0,0,0-1.4,5.62,9,9,0,0,1-1.41,5.62,26.62,26.62,0,0,0-1.4,4.49c-.56,2.25-1,3.57-1.41,3.94-2.24,1.88-2.81,3.65-1.68,5.34s.74,4.59-1.13,8.71c-.37.75-1.31,1.22-2.81,1.4s-2.44.66-2.81,1.41a2.53,2.53,0,0,0-.56,2.81,9.35,9.35,0,0,1,.56,2.81,12.38,12.38,0,0,0-1.68,3.93l-1.13,4.5a7.43,7.43,0,0,1-1.68-.28c-.76-.19-1.13-.09-1.13.28a3.75,3.75,0,0,0,.28,3.09c.57,1.32.47,2.16-.28,2.53h-2.81c-.37.38-.28,1.32.28,2.81s.47,2.44-.28,2.81q-2.82,2.82-1.68,4.78t-1.13,9.27c0,.38-.94.75-2.81,1.12S105,456.23,105,457a26.71,26.71,0,0,0-1.12,10.68,28.12,28.12,0,0,1-1.69,11.8,1.34,1.34,0,0,1-1.68.84c-.76-.18-1.13.28-1.13,1.41q0,1.13-.84,7t-2,7H93.79A38,38,0,0,0,92.67,505a69,69,0,0,1-.56,9,15.81,15.81,0,0,1-2.53,7q-2,2.81-7,2.81c-.38,2.62.09,4.5,1.41,5.62s1.77,3,1.4,5.62H79.74l-8.43,8.43a7.49,7.49,0,0,1-3.93-3.09c-.76-1.32-2.25-2.16-4.5-2.53-1.5.37-2.06.93-1.68,1.69a1.79,1.79,0,0,0,1.68,1.12c-.38,1.12-.84,1.69-1.4,1.69a3.08,3.08,0,0,1-1.69-.57,1.4,1.4,0,0,0-1.4-.28c-.38.19-.57.85-.57,2-1.88,0-3.18-.56-3.93-1.69a21.58,21.58,0,0,1-2-3.65,6.78,6.78,0,0,0-2.53-3.09c-1.12-.76-3-.76-5.62,0-1.12-1.12-1-2.44.28-3.93s2-2.07,2-1.69q-1.68-3.37-6.74-5.62A16.5,16.5,0,0,1,32,518.24a19.38,19.38,0,0,1-1.68-5.34c-.38-2.06.18-2.91,1.68-2.53a87,87,0,0,1-10.68-11.8,17.06,17.06,0,0,1-.84-6.75,19.66,19.66,0,0,1,1.69-6.46A22.22,22.22,0,0,1,25,480.58c.94-1.12,1.59-1.49,2-1.12q3.38,3.38,3.38-.56A24.18,24.18,0,0,1,32,470.47a8.26,8.26,0,0,0-2.81,3.93q-1.12,2.82-2.25-.56-7.29,0-5.62,10.68c-2.25-1.13-3.83-3.37-4.77-6.75a49.61,49.61,0,0,1-1.69-11,51,51,0,0,1,.84-11.8,37.25,37.25,0,0,1,2.81-9.27c1.5-1.49,2.25-2.06,2.25-1.69a16,16,0,0,1-.56,2.81c-.37,1.51-.84,3.19-1.41,5.06a9.57,9.57,0,0,0-.28,5.06q4.51,10.11,16.3,5.62c0-1.49-.38-2.43-1.12-2.81a10.4,10.4,0,0,0-2.81-.84A6.33,6.33,0,0,1,28,457.82c-.76-.56-1.13-1.77-1.13-3.65-.37-2.25-1.12-2.71-2.24-1.41A3.57,3.57,0,0,0,24.1,457a5.55,5.55,0,0,1-1.4-5.62c.56-2.25,1.32-4.68,2.25-7.31a86.94,86.94,0,0,0,2.53-8.43,16.87,16.87,0,0,0-.57-9.55q-2.81,1.13-2.53,4.5a26.3,26.3,0,0,1-.28,6.74q-1.68,2.82-2.53-.84a28.73,28.73,0,0,1-.56-8.15,21.9,21.9,0,0,1,2.25-8.43c1.32-2.62,3.28-3.38,5.9-2.25.37,0,.19-.56-.56-1.69a18.49,18.49,0,0,1-2-3.93,19.9,19.9,0,0,1-1.12-4.5,4.53,4.53,0,0,1,1.4-3.93,10.53,10.53,0,0,0,3.66-7.87A90.48,90.48,0,0,1,32,384.48c0-.37.65.19,2,1.69s1.59,2.62.84,3.37q0-.56,1.41-.84a2.63,2.63,0,0,0,2-2,4.74,4.74,0,0,0-.28-3.65,11.53,11.53,0,0,0-1.68-2.25,1.94,1.94,0,0,1-.57-2,9.43,9.43,0,0,1,2.53-3.37q1.13-1.12,1.41-7.87c.18-4.5.65-7.49,1.4-9a15.07,15.07,0,0,0,2.53-4.5q1.4-3.37.28-9.55c1.87-1.87,3.18-2.44,3.94-1.69a7.52,7.52,0,0,0,3.93,1.69q-3.37-5.06-2.81-13.49c2.62-.75,4.3-.56,5.06.56a5.81,5.81,0,0,0,3.93,2.25c.37-2.62-.09-4.22-1.4-4.78a12.2,12.2,0,0,0-4.78-.84,4.55,4.55,0,0,0,2.25-5.06,11.28,11.28,0,0,1,.56-6.18A6.14,6.14,0,0,1,57.26,314a7.67,7.67,0,0,0,2.81-2.53,21.29,21.29,0,0,0,1.41-5.9,34.1,34.1,0,0,1,.84-5.34c.37-1.49.93-2.34,1.69-2.53s2.24.66,4.49,2.53a15.71,15.71,0,0,1-1.68-10.68,41.5,41.5,0,0,1,3.93-10.4q2.81-5.33,5.62-10.39A27.57,27.57,0,0,0,79.74,258a4.51,4.51,0,0,0-3.93-3.09,6.17,6.17,0,0,1-4.5-2.53c-1.12-1.13-1.6-2.9-1.4-5.34s-1.22-3.46-4.22-3.09q0-3.37.28-7c.19-2.43-.84-3.84-3.09-4.21q2.81-5.61,8.43-5.62,0-8.43,8.43-8.43a31,31,0,0,1-2-3.38,4.43,4.43,0,0,0-3.1-2.24c0-.75.65-1.69,2-2.81A10.22,10.22,0,0,1,80.87,208a4.75,4.75,0,0,1,3.65.28c.93.56,1.21,2.16.84,4.78,2.25-.37,3.37-.94,3.37-1.69a4.24,4.24,0,0,0-1.12-2.53c-.75-.93-1.5-2-2.25-3.09a2.81,2.81,0,0,1,0-3.37q2.81-2.25,3.94.28c.74,1.68,1.3,2.53,1.68,2.53,2.25,0,2.81-.65,1.69-2S91,201.64,91,202.39a7.15,7.15,0,0,0,1.69-2.81l1.12-3.37a3.47,3.47,0,0,1,2.81,1.4,32.23,32.23,0,0,0,2.53,2.81,4.58,4.58,0,0,0,3.37,1.41q2,0,5.34-2.81c-.37-2.25-1.12-3.18-2.25-2.81a14.51,14.51,0,0,0-3.37,1.68,3.59,3.59,0,0,1-2.81.84q-1.12-.27,0-5.33a11.88,11.88,0,0,0,4.22-.57q1.4-.56,2.25-.84a5.48,5.48,0,0,1,1.68-.28c.56,0,1.59.56,3.09,1.69.37-.75.28-2-.28-3.66a4.64,4.64,0,0,1,.28-4.21c.37-.75,1.31-.93,2.81-.56a17.46,17.46,0,0,0,2.81.56q1.13-1.12,0-3.09c-.75-1.31-.75-2.34,0-3.1a12.33,12.33,0,0,1,3.09.57c1.31.38,2.16.19,2.53-.57a10.44,10.44,0,0,0,.57-7.58q-1.14-4.22,1.68-9.28,2.23,1.14,4.22,2.25a9.33,9.33,0,0,0,4.77,1.13c0-1.5-.66-2.25-2-2.25a6.4,6.4,0,0,1-3.66-1.13q-1.12-2.8.57-3.37a3.58,3.58,0,0,0,2.24-1.68,39.76,39.76,0,0,0,.85-6.19c.18-2.61.84-4.3,2-5.05.75-.75,1.5-.65,2.25.28a2.3,2.3,0,0,1,.56,2.53,4.94,4.94,0,0,0,2.25-.57c1.13-.74,1.31-1.49.56-2.24-1.88-1.5-2.81-2.72-2.81-3.66a2.53,2.53,0,0,1,1.41-2.24c.93-.57,2.15-1.22,3.65-2a7.38,7.38,0,0,0,3.37-3.37,14.12,14.12,0,0,0,1.41-4.78c.18-1.69.37-3.37.56-5.06a9.33,9.33,0,0,1,1.69-4.49,6.94,6.94,0,0,1,4.77-2.53c-.75-3-.65-5.34.28-7a27.64,27.64,0,0,1,3.1-4.5c1.12-1.3,2.24-2.71,3.37-4.21s1.49-3.56,1.12-6.18q5.06,0,6.18-3.38a15.54,15.54,0,0,0,7.87.29,29.19,29.19,0,0,1,9-.29l3.38,3.38q3.36,3.38,4.49,2.25c1.13-1.13,1.78-1.69,2-1.69s.18.28,0,.84a6.16,6.16,0,0,0-.28,2,1.8,1.8,0,0,0,1.12,1.69c1.13.75,2.53.75,4.22,0a5.33,5.33,0,0,1,4.77,0c.75.75,1.59,1.68,2.53,2.81s1.78,2.06,2.53,2.81a9.72,9.72,0,0,0,4.5,1.4,6.44,6.44,0,0,1,3.93,1.41,3.89,3.89,0,0,1,1.69,4.21,4.28,4.28,0,0,0,1.12,4.22,5.74,5.74,0,0,0,4.22,1.68,7.42,7.42,0,0,1,4.21,1.13q1.13,1.13,0,3.09c-.75,1.31-.75,2.16,0,2.53a9.67,9.67,0,0,0,3.1,1.4c1.68.56,2.52,1,2.52,1.41a7.84,7.84,0,0,1,.85,6.18q-.86,3.38,4.77,2.25c.75,3,.57,5.15-.56,6.46a10.36,10.36,0,0,0-2.25,4.78q3.38,1.13,4.22,0a9.83,9.83,0,0,0,1.4-2.81,15.32,15.32,0,0,1,1.41-3.09C244.13,142.16,245.54,142.25,247.78,143.38ZM32,450.8a11.43,11.43,0,0,0,.84-2.25c.19-.75.85-.93,2-.56a10.2,10.2,0,0,0-.84-4.5c-.56-1.12-2.16-1.31-4.78-.56a17.44,17.44,0,0,1,.28,5.34C29.25,450,30.09,450.8,32,450.8ZM38.15,412q0-6.18-6.18-8.43Q32,409.79,38.15,412ZM68.5,218.69a18.6,18.6,0,0,0-2.81,4.77q-1.68,3.66-2.81,3.66c-1.5.37-2.06-1-1.68-4.22S64,218.32,68.5,218.69Zm89.36,154a17.25,17.25,0,0,1,5.62,10.4q1.13,6.46,6.18,9.27c0-1.13.29-1.78.85-2a1.88,1.88,0,0,1,1.68.28,3,3,0,0,0,1.69.56q.84,0,.84-1.68c-1.88,0-2.81-.75-2.81-2.25a18.86,18.86,0,0,1,.56-4.5,8.82,8.82,0,0,0,.29-3.65c-.2-.93-1.22-1.21-3.1-.84-.75.38-1,1.6-.84,3.65s-.47,2.91-2,2.53A4.52,4.52,0,0,1,166,380a13.13,13.13,0,0,1,2-3.65,8.42,8.42,0,0,0,1.4-2.25c.19-.56-.66-1-2.53-1.4a11.43,11.43,0,0,0-.84,2.25c-.19.75-.84.94-2,.56a7.11,7.11,0,0,0-2.81-3.94Q159,369.87,157.86,372.68Zm9,28.1q1.69-3.37,3.1-3.37c.93,0,1.59.65,2,2a15.59,15.59,0,0,1,.56,4.22c0,1.5-.19,2.44-.56,2.81q-1.12,1.13-2.25-2.81C168.91,401,168,400,166.85,400.78Zm19.67-117.46c-2.24,0-3.18-.93-2.81-2.81a7.1,7.1,0,0,1,3.1-.56c1.3,0,2-.75,2-2.25q-4.5-1.12-5.9.56a4.87,4.87,0,0,0-1.12,3.93,3.85,3.85,0,0,0,1.68,3.09C184.36,285.85,185.4,285.2,186.52,283.32Zm5.06,142.75a17.13,17.13,0,0,1-5.34.28c-1.68-.18-2.53.66-2.53,2.53a5.52,5.52,0,0,1,3.94,2.53,7.44,7.44,0,0,0,3.93,3.09Zm2.81-156.8a12.39,12.39,0,0,1,4.78-2.25,6.58,6.58,0,0,0,4.21-3.37,11.75,11.75,0,0,0-5,.84l-3.94,2v-5.62a7,7,0,0,1,4.78-.56,25.41,25.41,0,0,1,4.5,1.4A16.9,16.9,0,0,0,207,262.8c.93.2,1.4-.46,1.4-2q-3.93-1.12,0-2.81,9-3.93,12.09-1.69a22.45,22.45,0,0,1,4.77,4.5c-.37-3.74-.28-6.09.28-7a2,2,0,0,1,2.53-.84,6.92,6.92,0,0,1,3.1,2.25c.93,1.12,1.77,2.06,2.52,2.81a14.25,14.25,0,0,0-2.81-8.43,5.38,5.38,0,0,1,5.62,1.12c1.87,1.5,2.81,1.12,2.81-1.12q.56-3.93,4.5-2.81a10.31,10.31,0,0,0,6.74,0c.75-.37,1.41-1.5,2-3.37a2.84,2.84,0,0,1,3.65-2.25,17.51,17.51,0,0,0,8.15.28,23.41,23.41,0,0,0,5.9-2.53c0,1.5.85,2.34,2.53,2.53s2.72-.65,3.09-2.53a2.36,2.36,0,0,1-2-1.41c-.56-.93.09-1.59,2-2,1.87-1.5,3.56-2.15,5.06-2a7.28,7.28,0,0,1,3.66,1.4,23.18,23.18,0,0,0,2.81,2c.93.56,1.77.1,2.53-1.4q-3.37,0-3.38-5.62,8.43,1.13,14.05-.85a49.78,49.78,0,0,0,10.12-4.77,92,92,0,0,0,8.71-6.19,28.86,28.86,0,0,1,9.84-5.05,3.32,3.32,0,0,1-1.41,3.09,2.74,2.74,0,0,0-1.4,2.53q3.36,0,4.77-1.41a10.07,10.07,0,0,0,2.25-3.65,13.45,13.45,0,0,1,2.25-3.94A5.17,5.17,0,0,1,340,208a19,19,0,0,1,6.75-3.37q3.93-1.12,4.49-5.62a231.32,231.32,0,0,0-39.9,5.9q-20.24,4.77-35.41,8.15-2.81,1.13-4.49,1.68a37.31,37.31,0,0,1-4.5,1.13,15.69,15.69,0,0,1-3.37,1.12c-.38,0-.94.56-1.69,1.69a2.92,2.92,0,0,1-3.09.56,13,13,0,0,0-2.53-.56c-.37,0-.37.47,0,1.4s.37,1.6,0,2a23,23,0,0,1-2.52-.28,5.34,5.34,0,0,0-3.1.28c-1.88.75-3.75,1.6-5.62,2.53s-3.75,1.78-5.62,2.53a42.55,42.55,0,0,1-6.18,1.4,20.87,20.87,0,0,0-5.06,1.41,38.89,38.89,0,0,1-11,5,25.63,25.63,0,0,0-8.71,3.94,31.13,31.13,0,0,1-7.58,3.65,13.55,13.55,0,0,0-6.47,4.22c-.75.75-.75,2.16,0,4.21s.75,3.47,0,4.22a3,3,0,0,1-2.53,1.4,5.37,5.37,0,0,0-3.09,1.41,39.87,39.87,0,0,0-1.4,8.71c-.2,3.19-.48,5.9-.85,8.15q4.5,1.13,5.34-1.69A7,7,0,0,1,194.39,269.27ZM200.58,448v-5.06h-6.19V448Zm19.1-181.53c.75.75.93,2,.57,3.65s.36,2.35,2.24,2q1.13-7.31-2.53-8.71a62.8,62.8,0,0,0-8.71-2.53c-.75,1.88-.84,3.18-.28,3.93a2.94,2.94,0,0,0,2.53,1.13h3.37A6.3,6.3,0,0,1,219.68,266.46Zm19.67,229.3a10.05,10.05,0,0,1,.85-4.5l2-3.93h-5.62q-2.81,0-2.81,3.37c1.87,0,2.9.76,3.1,2.25A3.06,3.06,0,0,0,239.35,495.76ZM253.4,260.84c.75-.75.19-1.31-1.68-1.69a17.45,17.45,0,0,1-3.94-1.12q-1.12,0-3.09-3.09c-1.31-2.06-2.16-2.9-2.53-2.53-.75.75-.56,1.88.57,3.37S244.6,258,245,258a16.06,16.06,0,0,1,3.38,2.81C249.84,262.34,251.53,262.34,253.4,260.84Zm-5.62,237.73q1.13,5.06,1.69,4.78c.37-.2.28-1.13-.28-2.81a21.18,21.18,0,0,0-2.53-5.06,4.09,4.09,0,0,0-4.5-2,18.15,18.15,0,0,0,1.41,4.5C244.13,499.13,245.54,499.32,247.78,498.57ZM281.5,246.79a10.14,10.14,0,0,1,4.5.84l3.94,2v-8.43h-6.19a4.36,4.36,0,0,1-.84,3.09A6.32,6.32,0,0,0,281.5,246.79Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M413,498.57c-.76-3-.66-5.15.28-6.46a23.38,23.38,0,0,0,2.53-4.78c0-1.49-.38-2.34-1.12-2.53s-1.6.19-2.53,1.12a10.7,10.7,0,0,0-2.25,3.37,3.62,3.62,0,0,0,.28,3.66c-1.12,0-1.6-1.31-1.41-3.94s.37-5.14.57-7.58a19.78,19.78,0,0,0-.28-5.9q-.57-2.25-4.5,1.12c-2.25-1.12-2.9-2.53-2-4.22s2.72-2.33,5.34-2q-5.61-5.61,2.25-5.62-2.25-2.25-1.69-3.66a7.49,7.49,0,0,1,2.25-2.81,45.21,45.21,0,0,0,3.37-3.09,6,6,0,0,0,1.69-4.49,10.62,10.62,0,0,1,6.18-.56q3.93.56,7.59,1.4a30.18,30.18,0,0,0,6.74.84,6.48,6.48,0,0,0,4.78-1.68V448a3.75,3.75,0,0,1,3.09.28c1.31.56,2.15.47,2.53-.28.75-1.13,1.31-1.69,1.69-1.69a2.76,2.76,0,0,1,1.4.56,6.58,6.58,0,0,0,2.53.85A38.31,38.31,0,0,0,458,448c2.62,0,4.5-.47,5.62-1.41s3-1.4,5.62-1.4q-1.12,4.5,1.69,5.62c1.87.75,3,1.68,3.37,2.81q.56,1.13,2,5.06c.93,2.62,1.4,3.75,1.4,3.37-1.12,1.12-1.68,1.88-1.68,2.25s.28.65.84.84,1.21.38,2,.56,1.3.84,1.68,2a38.63,38.63,0,0,1,0,9.27,76,76,0,0,0,0,13.21c-4.13,1.5-6.18,4.31-6.18,8.43-1.12,0-1.69-.65-1.69-2a6.43,6.43,0,0,0-1.12-3.65c-1.5,0-2.35.47-2.53,1.4a5.91,5.91,0,0,0,.28,3.09,14.87,14.87,0,0,0,1.41,3.1q.84,1.4.84.84,0,.56-4.5,7a42.79,42.79,0,0,1-9,9.84,3.75,3.75,0,0,1-3.09-.28c-1.32-.56-2.16-.48-2.53.28a28.94,28.94,0,0,1-4.5,2.53q-3.93,2-9.55.28a5.51,5.51,0,0,1-2.25-3.37c-.38-1.5-1.5-2.25-3.37-2.25-1.5,0-2.34-1-2.53-3.09s-1.22-2.91-3.09-2.53q-2.25,3.93-2,2.53c.19-.94.47-2.25.85-3.94a20.54,20.54,0,0,0,.56-3.93c0-.94-.76-.1-2.25,2.53q-4.5-.57-5.62-3.94C417.88,500.82,416,499.32,413,498.57ZM463.59,457V450.8H458V457Zm5.62,10.68V462h-5.62v5.62Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M499,469.34c.38-1.49.84-2,1.41-1.68a3.58,3.58,0,0,1,1.12,2.53,29.46,29.46,0,0,1,.28,4.21v2.81q-1.12,3.94-2.81,2C497.87,477.87,497.87,474.6,499,469.34ZM659.16,313.67q-1.12,1.68,2,1.4t3.09.84c.37,1.88.19,3-.56,3.38A3.67,3.67,0,0,0,662,321c-.75.76-.75,2,0,3.66s.75,3.09,0,4.21a10,10,0,0,1-3.09.84,3.1,3.1,0,0,0-2.53,1.41,33.39,33.39,0,0,0-2,10.12q-.3,5.63-5.9,5.05a22.84,22.84,0,0,1-.28,8.15,23.62,23.62,0,0,1-2.53,5.9c-1.13,1.88-2.25,3.66-3.38,5.34a15.4,15.4,0,0,0-2.24,6.47c-2.25-.75-3.57-.47-3.94.84s-.75,2.72-1.12,4.21a5,5,0,0,1-2.53-1.68,3.65,3.65,0,0,0-3.09-1.13q0,6.75,5.62,7.87a19.55,19.55,0,0,1-6.47,10.68c-3.18,2.63-4.77,6.74-4.77,12.36-1.5,0-2.16-.64-2-2a3.48,3.48,0,0,0-.84-3.09c-1.88.75-2.91,1.59-3.09,2.53a4.72,4.72,0,0,0,.56,3.09c.56,1.12,1.21,2.34,2,3.65a4.41,4.41,0,0,1,.57,3.65q-2.82,0-2.25,2.81a5.9,5.9,0,0,1-.56,4.5,9.9,9.9,0,0,1-2.81,2.81c-1.5,1.12-2.25,1.88-2.25,2.25a6.68,6.68,0,0,0,.28,4.21c.56,1.69.47,2.91-.28,3.66-.38.75-1.32.84-2.81.28s-2.44-.65-2.81-.28a9.4,9.4,0,0,0,0,6.46,11.23,11.23,0,0,1,0,7,6,6,0,0,1-4.22-.28,7.57,7.57,0,0,1-2.24-2l-1.69-2.25a3,3,0,0,0-2.53-1.13c.37.76.28,2.07-.28,3.94s-.47,3,.28,3.37c0,.38.84.47,2.53.28s2.71-.28,3.09-.28a4.2,4.2,0,0,1-1.69,4.5q-2.25,1.68,1.69,6.18a6.1,6.1,0,0,0-4.5,1.68L594.81,464a8.56,8.56,0,0,1-2.81,2q-1.41.57-3.65-1.68c-.76,3,0,4.49,2.25,4.49a32.77,32.77,0,0,1,6.18.56c-1.88,1.51-2.44,3.94-1.69,7.31s.37,6.18-1.12,8.43c-.38,0-1.32-.09-2.81-.28s-2.44-.09-2.81.28c0,.76.65,1.78,2,3.09a3.38,3.38,0,0,1,.84,4.22c.37-.75,0-.37-1.12,1.12s-1.69,2.06-1.69,1.69a21,21,0,0,0-2.25,5.62c-.75,2.61-.75,6.74,0,12.36-1.5,0-2.34.56-2.53,1.69a20.17,20.17,0,0,0-.28,3.37,29.12,29.12,0,0,0-3.93-1.69c-1.13-.37-1.88.19-2.25,1.69-.76-1.12-1.6-2.25-2.53-3.37a16.81,16.81,0,0,1-2.53-4.5c-1.88,1.13-2.25,2.34-1.12,3.65s.74,3.46-1.13,6.47q-4.5.56-5.9-1.41c-.94-1.32-2.9-1.6-5.9-.84a13.85,13.85,0,0,1,4.22-3.09c1.31-.56,2.89-1.22,4.77-2-.37-1.5-1.88-2.72-4.49-3.65a19.84,19.84,0,0,0-6.18-1.41,13.5,13.5,0,0,0-7.87,1.13q-3.37,1.68-3.37-1.13a16.49,16.49,0,0,0-5.62,7.31A8,8,0,0,0,534.4,514a31.71,31.71,0,0,1-3.94.28,5.9,5.9,0,0,1-3.09-.84c-.94-.56-1.6-2.34-2-5.34a32.73,32.73,0,0,0,5.05,1.69c.37,0,.19-.38-.56-1.13a32.13,32.13,0,0,1-2.81-3.37,8.23,8.23,0,0,1-1.68-5.06c-1.88.76-2.73,1.5-2.53,2.25A9.41,9.41,0,0,0,524,505a8.84,8.84,0,0,1,1.12,2.81c.19.93-.47,1.78-2,2.53-1.5,0-2.25-.56-2.25-1.69a16.68,16.68,0,0,0-.56-3.93c-.37-1.12-.85-1.6-1.41-1.4a1.29,1.29,0,0,0-.84,1.4,11.48,11.48,0,0,1-6.75-4.21,44.06,44.06,0,0,0-4.49-5.34c-.75-.75-.93-1.41-.56-2s-.37-.84-2.25-.84c-1.13,0-1.21-.28-.28-.85s2-1.12,3.09-1.68a4.78,4.78,0,0,0,2-1.41c.19-.37-1.22-.56-4.22-.56a18.75,18.75,0,0,0,1.12-5.9v-5.34a33.5,33.5,0,0,1,.57-5.9,14.32,14.32,0,0,1,3.37-6.46c1.88.37,2.53.94,2,1.68a2.43,2.43,0,0,1-2,1.13c.38,1.88.47,2.53.28,2a17.75,17.75,0,0,1-.56-2.81,13.62,13.62,0,0,1,0-3.93q.28-2,3.09-.84,3.38-1.12.84-5.62c-1.68-3-2-5.43-.84-7.31a2.23,2.23,0,0,1,2.81-.28c1.12.56,2.06.1,2.81-1.41,0-1.12-1.13-1.68-3.37-1.68s-3-.37-2.25-1.13a1.57,1.57,0,0,0,1.12-.56c.38-.37.66-.56.85-.56s.47-.18.84-.56a22.92,22.92,0,0,1,2.81-1.13c.38-1.49-.19-2.05-1.69-1.68s-1.87.94-1.12,1.68q-2.81.57-2.25-.84a30.1,30.1,0,0,1,1.69-3.37,7.85,7.85,0,0,0,1.12-3.94c0-1.3-1.12-2-3.37-2,0-2.62,1-3.38,3.09-2.25s2.91,1.88,2.53,2.25q2.82-1.12,1.12-5.06T520.35,416h5.06c0-1.49-.66-2.24-2-2.24a6.87,6.87,0,0,1-3.09-.57,16.46,16.46,0,0,0,.28-5.34c-.2-2.05-.28-3.93-.28-5.62a7.7,7.7,0,0,1,.84-3.93c.56-.93,2-1,4.22-.28.74-2.25.56-3.65-.57-4.22a10.13,10.13,0,0,0-4.49-.84q2.24-5.06,8.43-7.87a18.23,18.23,0,0,1,0-6.46,50.21,50.21,0,0,1,1.4-5.06c.56-1.69,1-3.37,1.41-5.06a18.71,18.71,0,0,0,0-6.46q3.36-.56,3.93-2.25a7.89,7.89,0,0,0,.28-3.65,11.74,11.74,0,0,1,0-3.65c.19-1.13,1.41-2.25,3.66-3.38-1.88-1.87-2.53-3.37-2-4.49a37.59,37.59,0,0,0,2-5.62,9.41,9.41,0,0,0-.57-2.81,2.54,2.54,0,0,1,.57-2.81h2.24A32.18,32.18,0,0,0,544,321.25c0-4.3.37-6.83,1.13-7.58,0-.37.74-.09,2.24.84a7.39,7.39,0,0,0,3.38,1.4,9,9,0,0,1,.56-2.24q.56-1.69,2.25,0c0-1.87-.66-2.81-2-2.81a11.26,11.26,0,0,1-3.65-.57c-.76-1.87-.85-3.37-.29-4.49s1.13-2.15,1.69-3.09a20,20,0,0,0,1.41-2.81,8.15,8.15,0,0,0,0-4.22c2.61,1.88,4.11,2.25,4.49,1.13s2.25-1.5,5.62-1.13c0-1.87-.75-2.81-2.25-2.81a25.51,25.51,0,0,1-5-.56q2.24-1.68,3.09-7t1.68-10.11a22.6,22.6,0,0,1,2.53-7.59c1.13-1.87,3.18-2.05,6.18-.56-1.88-2.62-3.09-4.3-3.65-5.06a2.17,2.17,0,0,1-.56-2,12,12,0,0,1,1.12-2.24,16.14,16.14,0,0,0,1.41-5.34,9.73,9.73,0,0,1,3.93.56,20,20,0,0,1,2,1.12,2.3,2.3,0,0,0,2,.28,11.3,11.3,0,0,0,3.37-2c-1.5-1.13-3-2.34-4.5-3.66s-2.81-2.53-3.93-3.65a3.55,3.55,0,0,0,1.4-3.65,6.1,6.1,0,0,1,.85-4.22c.36-.74,1.4-1.21,3.09-1.4s2.71-.65,3.09-1.41c0-.74-.56-1.77-1.69-3.09a4.5,4.5,0,0,1-1.12-4.21c0-.37.93-1.31,2.81-2.81s2.81-2.44,2.81-2.81a5.64,5.64,0,0,0-2-4.5q-2-1.68-.84-5.62c2.25-.37,3.74-.28,4.49.28a12.9,12.9,0,0,1,2.25,2.25,30.26,30.26,0,0,0,2.25,2.53q1.13,1.13,4.5,0-2.82-2.24-5.06-4.22c-1.5-1.31-.76-3.27,2.25-5.9a29.55,29.55,0,0,1-3.38,2,10.13,10.13,0,0,1-4.49.84c0-2.25.84-3.74,2.53-4.49a43.67,43.67,0,0,1,5.34-2,11.05,11.05,0,0,0,4.77-2.81q2-2,.85-6.46a45.74,45.74,0,0,1-4.22,3.93c-.56.38-.84,0-.84-1.12s.09-2.62.28-4.5a12,12,0,0,0-.84-5.62,3.1,3.1,0,0,1,2.52,2.81c.19,1.5,1.22,2.25,3.1,2.25,1.12,0,1.59-.28,1.4-.85s-.38-1.12-.56-1.68a5.25,5.25,0,0,1-.28-1.69q0-.84,2.25-.84A13.34,13.34,0,0,0,594,181c-.76-1.12-1.4-2.05-2-2.81a4.12,4.12,0,0,1-.84-2.53,13,13,0,0,1,1.69-4.77c1.87.37,2.71,1.22,2.53,2.52a14,14,0,0,0,.28,4.78,15.54,15.54,0,0,0,3.93-7.59,15.55,15.55,0,0,1,3.93-7.58c0-3-1.12-3.46-3.37-1.41s-3,4.22-2.25,6.46c-1.87-.36-2.81-.93-2.81-1.68a5.37,5.37,0,0,1,1.13-2.81,40,40,0,0,0,2.25-3.94,4,4,0,0,0-.57-4.49h11.24c0-1.49-.93-2.15-2.81-2a18.33,18.33,0,0,1-5.62-.28V140c2.62,2.63,4.12,3.75,4.5,3.38s.28-1.41-.28-3.09-1.32-3.84-2.25-6.47a47.68,47.68,0,0,1-2-6.74,12.66,12.66,0,0,1,4.22,2,13.93,13.93,0,0,0,3.65,2,4.32,4.32,0,0,0,3.09,0c.93-.37,1.78-1.68,2.53-3.93q5.07,3.38,9.28,5.9c2.81,1.69,5.14,1.4,7-.84q2.81-.55,2.25,1.68c-.38,1.5-.19,2.63.56,3.37s1.69.76,2.81,0,2.06-.74,2.81,0l2.81,5.06a5.81,5.81,0,0,0,3.65-1.68,3.57,3.57,0,0,1,4.22-.57q1.13.57,2.81,3.94c1.12,2.25,2.05,3.56,2.81,3.93.75,0,1.87-.74,3.37-2.25a4.37,4.37,0,0,1,5.06-1.12c.37,2.25-.56,3.37-2.81,3.37a77.85,77.85,0,0,0,9.84,9.28,159.64,159.64,0,0,1,12.08,10.95c.74.76.93,1.32.56,1.69s.37.76,2.25,1.13l7.3,7.3a12.2,12.2,0,0,1,.57,8.15q-1.14,4.22-5.06-.28v5.06q.55,2.82,2.25,1.12t5.62-1.12a13,13,0,0,1-1.13,4.49,34.54,34.54,0,0,0-1.68,5.34,6.25,6.25,0,0,0,.28,4.22c.56,1.12,2.33,1.5,5.34,1.12a17.71,17.71,0,0,0-4.5,6.75,22.89,22.89,0,0,0-1.12,7.3c0,2.63.08,5.06.28,7.31a16.84,16.84,0,0,1-.85,6.74c0,.76-.75,1.22-2.24,1.41s-2.25.66-2.25,1.4a14,14,0,0,0-.84,8.15,7.86,7.86,0,0,1-2,7l-2.81,2.81a13.74,13.74,0,0,0-1.41,7.3,16.73,16.73,0,0,1-1.4,7.87,9.65,9.65,0,0,1-2.81,2.81,25.11,25.11,0,0,1-3.37,2.25,3.58,3.58,0,0,0,0,2.81,3.66,3.66,0,0,1,0,2.81c0,.38.18-.19.56-1.69s.84-3.17,1.4-5.05,1.13-3.66,1.69-5.34.84-2.34.84-2a6.61,6.61,0,0,0,0,5.34,5.36,5.36,0,0,1,0,4.78c-.38.75-1.31,1.22-2.81,1.4s-2.25.66-2.25,1.41a8.75,8.75,0,0,0,0,6.18,8.75,8.75,0,0,1,0,6.18,9,9,0,0,1-3.09,2.81c-1.68,1.12-2.53,2.06-2.53,2.81a19.29,19.29,0,0,0-.28,8.71,30.88,30.88,0,0,1,.28,9.27A11.63,11.63,0,0,0,659.16,313.67ZM558,495.2a32.52,32.52,0,0,1-1.4-8.43c-.2-3.38-1.22-5.81-3.09-7.31a6.22,6.22,0,0,1,.28,4.78,14.67,14.67,0,0,1-2,3.37,6.59,6.59,0,0,0-1.41,2.81c-.19.94.85,1.6,3.1,2,0-1.87.93-2.62,2.81-2.25a14,14,0,0,0,0,5.62C556.68,497.64,557.25,497.44,558,495.2Zm11.8,27.54a3.13,3.13,0,0,1-2.81,3.37,10.33,10.33,0,0,1-5.34-.28c-1.68-.57-2.62-1.22-2.81-2s1.59-1.12,5.34-1.12Zm10.68-18q2.24-2.25,1.13-3.37a5.74,5.74,0,0,0-3.38-1.41,8,8,0,0,0-4.21.57,2.71,2.71,0,0,0-2,2.52c0-.37,1.49-.28,4.5.29S580.85,504.37,580.48,504.75Zm1.13-254.59a6.86,6.86,0,0,0-.28-4.22,13.14,13.14,0,0,0-2.25-4.21,5.27,5.27,0,0,0-2.81-2c-.94-.18-1.79.66-2.53,2.53A2.2,2.2,0,0,1,576,243.7c.36.94.74,2,1.12,3.09a9.83,9.83,0,0,0,1.4,2.81C579.08,250.35,580.1,250.54,581.61,250.16Zm29.78-84.3c-.75-3.74,0-5.81,2.25-6.19s3.37-1.87,3.37-4.49a5.3,5.3,0,0,0-4.77,0,6.27,6.27,0,0,0-2.81,3.37,9.24,9.24,0,0,0-.57,4.5A3.08,3.08,0,0,0,611.39,165.86Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M696.25,498.57q-1.12-4.5.29-6.46a23.38,23.38,0,0,0,2.53-4.78c0-1.49-.38-2.34-1.13-2.53s-1.6.19-2.53,1.12a10.87,10.87,0,0,0-2.25,3.37,3.62,3.62,0,0,0,.29,3.66c-1.13,0-1.6-1.31-1.41-3.94s.37-5.14.56-7.58a19.13,19.13,0,0,0-.28-5.9q-.57-2.25-4.5,1.12-3.36-1.68-2-4.22c.94-1.68,2.71-2.33,5.34-2q-5.61-5.61,2.25-5.62-2.26-2.25-1.69-3.66a7.4,7.4,0,0,1,2.25-2.81q1.68-1.39,3.37-3.09a6.06,6.06,0,0,0,1.69-4.49,10.61,10.61,0,0,1,6.18-.56q3.91.56,7.58,1.4a30.27,30.27,0,0,0,6.75.84,6.51,6.51,0,0,0,4.78-1.68V448a3.75,3.75,0,0,1,3.09.28c1.3.56,2.15.47,2.53-.28.74-1.13,1.3-1.69,1.68-1.69a2.82,2.82,0,0,1,1.41.56,6.52,6.52,0,0,0,2.53.85,38.31,38.31,0,0,0,5.62.28c2.61,0,4.49-.47,5.62-1.41s3-1.4,5.62-1.4q-1.14,4.5,1.68,5.62c1.87.75,3,1.68,3.37,2.81q.56,1.13,2,5.06c.93,2.62,1.41,3.75,1.41,3.37-1.13,1.12-1.69,1.88-1.69,2.25s.28.65.84.84,1.21.38,2,.56,1.31.84,1.69,2a38.63,38.63,0,0,1,0,9.27,76,76,0,0,0,0,13.21q-6.19,2.25-6.19,8.43c-1.12,0-1.68-.65-1.68-2A6.44,6.44,0,0,0,754.7,493c-1.5,0-2.34.47-2.53,1.4a5.92,5.92,0,0,0,.29,3.09,15.38,15.38,0,0,0,1.4,3.1q.84,1.4.84.84,0,.56-4.49,7a42.79,42.79,0,0,1-9,9.84,3.75,3.75,0,0,1-3.09-.28c-1.32-.56-2.17-.48-2.53.28a28.94,28.94,0,0,1-4.5,2.53q-3.95,2-9.55.28a5.46,5.46,0,0,1-2.25-3.37c-.38-1.5-1.5-2.25-3.37-2.25-1.51,0-2.35-1-2.53-3.09s-1.22-2.91-3.09-2.53q-2.26,3.93-2,2.53c.18-.94.46-2.25.84-3.94a19.76,19.76,0,0,0,.56-3.93q0-1.41-2.24,2.53-4.51-.57-5.62-3.94C701.12,500.82,699.25,499.32,696.25,498.57ZM746.84,457V450.8h-5.62V457Zm5.62,10.68V462h-5.62v5.62Z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1129,161.36l5.06-2.53a9.14,9.14,0,0,1,6.74-.28c-.38,0-.47,1.32-.28,3.93s1,3.38,2.53,2.25v-3.37q-.57,0,3.65,1.69a28.87,28.87,0,0,0,4.78,1.68,6.26,6.26,0,0,1,3.09,4.22,7,7,0,0,0,2.53,4.21,4,4,0,0,0,3.65,1.69q2.54,0,.84,4.49c1.13,0,3.56.1,7.31.29s6,1,6.74,2.53q.55,1.68-1.12,4.21c-1.12,1.69-2.06,2.34-2.81,2a4.92,4.92,0,0,0,.56,2.25c.75,1.5,1.69,1.68,2.81.56,1.13-1.5,2-2.15,2.53-2a3.64,3.64,0,0,1,1.69,1.69c.56.94,1.21,2.06,2,3.37a5.42,5.42,0,0,0,3.94,2.53,13.5,13.5,0,0,0,.28,6.18,32,32,0,0,1,1.12,5.06,6.73,6.73,0,0,1-.56,3.93c-.56,1.13-2.16,2.07-4.78,2.81,0,1.88.29,2.81.85,2.81a5.42,5.42,0,0,0,2.53-1.12c1.12-.75,2.33-1.49,3.65-2.25s2.71-.56,4.21.56q4.5,7.88,3.66,20.8t-2,26.41c-2.62-.37-4,.48-4.21,2.53a14,14,0,0,1-2,5.9,23.84,23.84,0,0,1-6.18,4.22,15.65,15.65,0,0,0-5.62,4.21c-.76.76-.85,1.78-.28,3.09s.46,2.35-.29,3.09c-1.5,1.5-3.46,3.38-5.9,5.62s-4.59,4.32-6.46,6.19-3.93,4-6.18,6.46a29.75,29.75,0,0,1-6.18,5.34q-1.14,1.13-3.09,0c-1.32-.75-2.17-.75-2.53,0a6.86,6.86,0,0,0-1.69,3.09,7,7,0,0,1-1.69,3.09,21.25,21.25,0,0,1-4.77,1.41,8.77,8.77,0,0,0-3.66,1.4,23.77,23.77,0,0,0-3.37,2.81l-2.81,2.81-3.93,2q-1.7.84-2.81,4.21-3.94-1.11-5.9.28a22.48,22.48,0,0,1-4.78,2.53,19.19,19.19,0,0,0-5.62,3.66,9.09,9.09,0,0,1-6.18,2.52,5.43,5.43,0,0,0-2.81,1.13,28.36,28.36,0,0,1-2.81,1.69c-.76.75-1.79,1.68-3.09,2.8s-2.35,2.07-3.1,2.82a19,19,0,0,1-7,1.12,19.25,19.25,0,0,0-7,1.12,8.48,8.48,0,0,0-3.65,3.66,6.83,6.83,0,0,1-2.53,3.09,4.76,4.76,0,0,1-4.49,0,3.72,3.72,0,0,0-3.94,0c-.75,0-1.32.94-1.68,2.81s-.94,3-1.69,3.37a3.89,3.89,0,0,1-3.93-1.12,8.49,8.49,0,0,1-1.69-2.25c-1.88.75-2.53,1.78-2,3.09s.09,2.34-1.4,3.09a18.48,18.48,0,0,1-7.31.84,13.82,13.82,0,0,0-7.3,1.41,22.5,22.5,0,0,1-5.06,2.81q-2.82,1.13-3.38-2.81c-1.87-.37-2.72.56-2.52,2.81s-.1,3.56-.85,3.93a15.84,15.84,0,0,1-8.15,1.41,19,19,0,0,0-8.71,1.4,3.71,3.71,0,0,1-3.09-.28c-1.32-.56-2-.46-2,.28-.37,0-.56.56-.56,1.69v1.12a10.16,10.16,0,0,1-4.78,0,22.3,22.3,0,0,0-4.77-.56,15.48,15.48,0,0,0-4.22.56,5.06,5.06,0,0,0-3.09,2.81,4.21,4.21,0,0,1-2.53-3.37c-.19-1.49-1.22-2.25-3.09-2.25s-2.44.56-1.68,1.69,1.12,1.5,1.12,1.12a3.09,3.09,0,0,1-2.81,2.53q-2.25.29-2.25,3.09-11.25-2.81-18.83-2.25t-21.63,5.06c-1.51-1.49-2.25-4.3-2.25-8.43q-2.82.57-2.53,3.09c.18,1.69,1,2.53,2.53,2.53-.38,1.88-1.13,3-2.25,3.37a6,6,0,0,1-3.65,0,9.28,9.28,0,0,1-3.37-1.68,23.94,23.94,0,0,1-2-1.69q-10.12,3.94-10.12,20.23a17.42,17.42,0,0,0-5.62,6.19,30.87,30.87,0,0,0-2.53,7.3,56.33,56.33,0,0,0-1.12,8.15,24.63,24.63,0,0,1-2,8.15,1.8,1.8,0,0,1-1.68,1.13c-.76,0-1.13.56-1.13,1.68v2.81a31,31,0,0,0-1.68,5.62,97,97,0,0,1-2.81,9.56c0,.37-.38.47-1.13.28a7.6,7.6,0,0,0-1.68-.28c-.76,3-.94,5.25-.57,6.74s-.37,3.19-2.24,5.06c-.76.75-1.13,3.56-1.13,8.43a100.09,100.09,0,0,1-.56,11.8c-3-.75-5-2.15-5.9-4.22s-2.91-1.77-5.9.85c.37,1.88.84,2.81,1.4,2.81a4.65,4.65,0,0,0,2-.56,10.74,10.74,0,0,1,2.53-.85c.93-.18,1.77.48,2.53,2a32.7,32.7,0,0,1-2.25,9.55,58.62,58.62,0,0,1-3.93,7.59,36.72,36.72,0,0,0-3.66,7.87,31.06,31.06,0,0,0-1.4,9.84q-6.19,0-9,6.74H812.58a19.09,19.09,0,0,0-6.46-5.9,17.87,17.87,0,0,1-6.46-6.46,30,30,0,0,0-3.94-4.78c-2.24-2.44-3.37-4.59-3.37-6.46q.57-2.26-1.4-5.34t2.53-3.66c-1.13-1.87-2.62-2.53-4.5-2s-4.12-.65-6.74-3.66a51.82,51.82,0,0,1,5-5.34q1.69-1.4-7.3-1.4c.75-3,2.44-4.68,5-5.06a11.54,11.54,0,0,0,6.75-3.37q-3.93-3.93-.84-5.34c2.06-.93,3.65-3.09,4.77-6.46a6.88,6.88,0,0,1-2.81,1.68l-3.37,1.13a5.07,5.07,0,0,0-2.53,1.68c-.56.76-.65,2.25-.28,4.5a6.91,6.91,0,0,1-2.81-5.62,35.21,35.21,0,0,1,.84-7.31,53.16,53.16,0,0,1,2.25-7.59,51,51,0,0,0,2-5.9,51.88,51.88,0,0,0,1.12-10.11c0-3,.2-6.55.57-10.68a22.32,22.32,0,0,1,3.65-2,12.2,12.2,0,0,1,4.78-.84,8.87,8.87,0,0,0-3.94-3.09c-1.49-.56-1.87-2.34-1.12-5.34-.37-3,.47-4.68,2.53-5.06s4-.75,5.9-1.12c0,1.88-.56,2.72-1.69,2.53a4.57,4.57,0,0,0-3.37.84c0,3,1.4,3.65,4.22,2s4-3.46,3.65-5.34c0-1.87-.85-2.81-2.53-2.81a19.38,19.38,0,0,1-4.78-.57,61,61,0,0,1,3.37-12.36,58.83,58.83,0,0,0,3.38-13.49q3.91,3.38,6.74.56t2.81-10.11a3.65,3.65,0,0,0-3.09,3.65,20.94,20.94,0,0,1-1.41,5.9c-2.24-2.25-2.72-5.8-1.4-10.68s2.53-9.17,3.65-12.92c.37-.37,1.13.19,2.25,1.68a4,4,0,0,1,.56,4.5c.37-1.12.93-1.49,1.69-1.12s1.12-.37,1.12-2.25a5.94,5.94,0,0,0-1.12-4.78c-1.13-1.69-1.32-4-.56-7a25,25,0,0,0,2.81,1.68c1.49.76,2.43.94,2.81.56.37-.74-.1-2.15-1.41-4.21a7.19,7.19,0,0,1-.84-6.47,2.26,2.26,0,0,0,1.68-.56A13,13,0,0,0,822.7,335a4.84,4.84,0,0,0-.28-1.4,1.27,1.27,0,0,1,.28-1.41,31.3,31.3,0,0,0,1.69-3.93c.36-1.13.93-2.81,1.68-5.06a22.32,22.32,0,0,0,2-3.65c.56-1.31,1.21-2.9,2-4.78.37-1.87.93-4.3,1.68-7.31a21.23,21.23,0,0,0-.56-10.67c2.62-.37,4.3,0,5.06,1.12s2,1.69,3.93,1.69c-1.12-2.62-1.22-4.87-.28-6.75a14,14,0,0,1,3.37-4.49,23.33,23.33,0,0,1,5.91-3.38c.74-.74.36-1.3-1.13-1.68s-1.88.19-1.12,1.68c-1.88,0-2.81-.37-2.81-1.12a3.86,3.86,0,0,1,1.4-2.53c.93-.93,1.87-2,2.81-3.09a5.44,5.44,0,0,0,1.41-2.25,10.64,10.64,0,0,0,.56-5.9,8.33,8.33,0,0,1,.56-5.34,7.16,7.16,0,0,1,3.37-1.69c1.5-.36,2.25-.74,2.25-1.12a11.37,11.37,0,0,0,.56-6.18,11.38,11.38,0,0,1,.56-6.18c.37-.75,1.41-1.22,3.1-1.41s2.71-.46,3.09-.84a27.35,27.35,0,0,0,1.4-9.56c-.19-2.61.85-5.42,3.09-8.43a49.22,49.22,0,0,0,2.81-5.05c1.13-2.25,1.31-5.43.57-9.56,3-2.25,4.68-2.81,5-1.68s2.62,1.68,6.75,1.68c.37-1.87-.48-2.62-2.53-2.25s-3.29.2-3.65-.56a11.09,11.09,0,0,1,0-7q1.11-3.66,2.24-7a28.93,28.93,0,0,0,1.41-6.74,10.09,10.09,0,0,0-1.41-6.18c1.87,0,3.18-.37,3.94-1.13a5.33,5.33,0,0,0,1.4-3.09c.19-1.31.37-2.9.56-4.78a20.43,20.43,0,0,1,1.41-5.62c0-.74.93-1.77,2.81-3.09s2.81-2.15,2.81-2.53q1.13-2.8.28-7.58t.84-7.59c.37,0,1.22.66,2.53,2s2.34,1.78,3.09,1.4c1.5-.37,2.34-1,2.53-2a2.32,2.32,0,0,0-.56-2.24,2.4,2.4,0,0,0-1.68-.85c-.57,0-.66.56-.29,1.69a1.11,1.11,0,0,0-1.68-.56c-.76.37-1.13-.37-1.13-2.25.37-.75.93-2,1.69-3.65s1.49-3.46,2.25-5.34a3.67,3.67,0,0,1,1.68-1.69c.75-.37,1.13-.75,1.13-1.12a15.08,15.08,0,0,0,.56-7.31,14.86,14.86,0,0,1,.56-7.31c0-.37.93-.37,2.81,0s2.81.38,2.81,0q.56-1.11-1.68-4.77c-1.5-2.44-1.32-4.59.56-6.47q2.8-3.91,6.18-2.81a10,10,0,0,0,7.31-.56c.74,0,2-.93,3.65-2.81s2.53-3,2.53-3.37a2.7,2.7,0,0,1,2.53,1.69c.56,1.12,1.59,1.5,3.09,1.12a5.43,5.43,0,0,0,2.81-1.12c1.12-.75,1.31-1.31.56-1.69q5.05,1.13,7.31,3.09a15.69,15.69,0,0,0,6.18,3.09,10.28,10.28,0,0,1,5.62-1.4l4.5.56c1.49.19,3.17.47,5,.84a23.27,23.27,0,0,0,7.31,0,31.86,31.86,0,0,0,9,11.8,27.23,27.23,0,0,1,8.43,12.37q5.06-2.8,15.74-3.65a154.31,154.31,0,0,1,20.79-.29h6.19v3.94a42.21,42.21,0,0,1,6.46-1.41,10.37,10.37,0,0,1,4.78.56,3.51,3.51,0,0,1,2.24,3.66,24.33,24.33,0,0,0,4.5-2.25,5.86,5.86,0,0,1,4.5-.56,69.67,69.67,0,0,1,7.58.56,31.28,31.28,0,0,1,8.71,2.25V135a7.3,7.3,0,0,0,5.62,0,7.3,7.3,0,0,1,5.62,0,2.3,2.3,0,0,1,.57,1.68c0,.76.74,1.13,2.24,1.13h2.81a9.21,9.21,0,0,0,5.06,1.12,21.92,21.92,0,0,1,8.43,2.25c.75.38,1,.84.85,1.4s.46,1,2,1.41a9.64,9.64,0,0,1,4.5,1.68,54.35,54.35,0,0,1,5.62,3.94c1.49.75,3.09,1.6,4.78,2.53s4,1.22,7,.84q-3.93,4.5-2.81,4.5a15.17,15.17,0,0,0,3.37-.57,7.89,7.89,0,0,1,3.38-.28C1132,156.78,1131.25,158.37,1129,161.36ZM855.3,519.92q-1.14-3.93,0-4.49a3.57,3.57,0,0,1,2.81,0l2.53.84c.56.19.08-.28-1.41-1.4a3,3,0,0,1-.84-2.81c.18-1.13-.66-1.32-2.53-.56-.38,0-.56.46-.56,1.4s-.76,1.59-2.25,2a6.17,6.17,0,0,0-1.13-2.25c-.75-.76-1.31,0-1.68,2.25,1.87,0,2.81.74,2.81,2.25A2.64,2.64,0,0,0,855.3,519.92Zm4.49-11.24a8,8,0,0,0,4.78-2,13.92,13.92,0,0,0,3.93-4.78,15.91,15.91,0,0,0,1.69-5.34c.19-1.68-.28-2.53-1.4-2.53a6.85,6.85,0,0,1-1.41,4.5,14.79,14.79,0,0,1-3.09,2.81,14.29,14.29,0,0,0-3.09,2.81A6.76,6.76,0,0,0,859.79,508.68Zm93.3-218.06c0,1.88-.1,3.85-.28,5.91s.65,3.09,2.52,3.09c-.75-1.87-.47-3.38.85-4.5a14,14,0,0,1,4.21-2.53,6.64,6.64,0,0,0,3.09-2c.57-.74-.28-1.68-2.52-2.81a3.06,3.06,0,0,1-2.53,3.38A8.9,8.9,0,0,1,953.09,290.62Zm52.26-21.91V267c0-.37.65-.37,2,0a4.26,4.26,0,0,0,3.09,0l.56-1.12v-1.13a2.24,2.24,0,0,1,2.82-.28,3.07,3.07,0,0,0,2.8.28V262c.37-.75,1.31-.93,2.82-.56a14.84,14.84,0,0,0,3.37.56,8.16,8.16,0,0,0-.28-1.68,1.65,1.65,0,0,1,.28-1.69q.56-.55,2.25,0a3.55,3.55,0,0,0,2.8,0,120.33,120.33,0,0,0,17.71-11q8.7-6.45,18.26-6.46,2.25-2.8,5.34-7c2.06-2.81,3.46-4.4,4.22-4.78.37-.74,1.21-.84,2.53-.28a3.67,3.67,0,0,0,3.09.28v-2.81c.37-.74,1.21-.84,2.53-.28a3.71,3.71,0,0,0,3.09.28c.74-.74.84-1.87.28-3.37s-.47-2.61.28-3.37a3.12,3.12,0,0,1,2.81.28,2.22,2.22,0,0,0,2.81-.28,24.48,24.48,0,0,0,3.37-2.25,9.52,9.52,0,0,0,2.81-2.81,7,7,0,0,0,.56-3.09v-3.93a16.56,16.56,0,0,1,.29-3.38c.18-.93,1-1.4,2.52-1.4,1.88,0,3.38-1.49,4.5-4.5a49.19,49.19,0,0,0,2.25-7.3,68.36,68.36,0,0,0-15.46-5.34,112.81,112.81,0,0,0-17.7-2.53,132.39,132.39,0,0,0-17.14,0A110.93,110.93,0,0,0,1043,185a11.41,11.41,0,0,1-5.62-.29,8.31,8.31,0,0,0-5.62.29c-.76,0-1.69.84-2.81,2.52a10.45,10.45,0,0,1-3.93,3.66,6.73,6.73,0,0,1-4.5.56c-1.12-.37-2.44.38-3.94,2.25-.75.75-1.68.75-2.8,0s-1.88-.75-2.25,0a6,6,0,0,0-3.09,3.65q-.86,2.53-3.66,2-7.31.57-11.24,4.49t-11.24,4.5a30.44,30.44,0,0,1-1.68,13.21q-2.26,5.9-2.81,7.58c-.76,1.88-1.41,3.47-2,4.78a21.92,21.92,0,0,1-2,3.65q-1.12,2.82-2,5.34c-.57,1.69-1,3.09-1.41,4.22-.76,1.88-1.32,3.28-1.69,4.21s-.94,2.16-1.68,3.66a25.66,25.66,0,0,0-4.5,8.43q-1.68,5.06-2.81,9.55c-.75,1.88-1.88,4.41-3.37,7.59s-.76,5.53,2.25,7a12.09,12.09,0,0,1,4.77-3.65,35.88,35.88,0,0,1,6.75-2.25q3.64-.84,6.74-1.4a12.55,12.55,0,0,0,4.78-1.69c.75,0,1.77-.65,3.09-2s2.34-.64,3.09,2c.37,3.75.19,5.72-.56,5.9a3.63,3.63,0,0,1-2.81-.84,13.05,13.05,0,0,0-3.65-1.69c-1.32-.36-2.16.57-2.53,2.81a10.46,10.46,0,0,1,4.78,2.25c1.3,1.13,2.71.38,4.21-2.25a4.7,4.7,0,0,0,3.93.57,9.41,9.41,0,0,0,3.66-1.69,2.81,2.81,0,0,0,1.12-2.81q-.29-1.68-3.09-2.25c-.38,1.88-1,2.63-2,2.25s-1-2.06-.28-5.06c1.5-3.37,3.56-4.86,6.18-4.49a17,17,0,0,0,8.43-1.13ZM972.2,294c.36-2.25,1.12-3.75,2.24-4.5s1.69-2.25,1.69-4.5a16.83,16.83,0,0,1-5.34.28q-2.53-.27-3.65,2.53a5,5,0,0,0,3.65.85c1.31-.19,2,.47,2,2a2.19,2.19,0,0,0-2.25,1.41C970.13,293,970.69,293.63,972.2,294Zm26.41-18q3.38,0,3.37,2.81a3.08,3.08,0,0,0-2.25,1.41q-1.12,1.41,1.69,2.53c0-2.62,2.06-3.94,6.18-3.94-.38,1.13-.28,1.88.28,2.25s1.22-.37,2-2.25q-3.37-.56-2.25-3.65a13,13,0,0,1,2.81-4.78Q1002,271.53,998.61,276Zm26.42-5.62c.36-2.62,0-4.21-1.13-4.78s-1.69,1-1.69,4.78q-6.18-.56-7.3.28c-.76.56-.66,1.13.28,1.69a9.09,9.09,0,0,0,4.5.84A6.68,6.68,0,0,0,1025,270.39Zm5.62-5.62a6.22,6.22,0,0,0-.57,2.81v2.81c1.5,0,2.44.38,2.81,1.13a3.6,3.6,0,0,0,2.25,1.68q-1.68-6.74,2-7.59a8,8,0,0,0,5.34-3.65c-3-.75-5.06-.46-6.18.84S1033.26,264.77,1030.65,264.77Z\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1197,498.57c-.76-3-.66-5.15.28-6.46a23.38,23.38,0,0,0,2.53-4.78c0-1.49-.38-2.34-1.13-2.53s-1.6.19-2.53,1.12a10.87,10.87,0,0,0-2.25,3.37,3.62,3.62,0,0,0,.29,3.66c-1.13,0-1.6-1.31-1.41-3.94s.37-5.14.56-7.58a19.13,19.13,0,0,0-.28-5.9q-.57-2.25-4.5,1.12-3.36-1.68-2-4.22c.94-1.68,2.71-2.33,5.34-2q-5.61-5.61,2.25-5.62-2.26-2.25-1.69-3.66a7.4,7.4,0,0,1,2.25-2.81c1.12-.93,2.25-2,3.37-3.09a6.06,6.06,0,0,0,1.69-4.49,10.61,10.61,0,0,1,6.18-.56q3.91.56,7.58,1.4a30.27,30.27,0,0,0,6.75.84,6.51,6.51,0,0,0,4.78-1.68V448a3.75,3.75,0,0,1,3.09.28c1.31.56,2.15.47,2.53-.28.74-1.13,1.3-1.69,1.68-1.69a2.79,2.79,0,0,1,1.41.56,6.52,6.52,0,0,0,2.53.85,38.31,38.31,0,0,0,5.62.28c2.61,0,4.49-.47,5.62-1.41s3-1.4,5.62-1.4q-1.14,4.5,1.68,5.62c1.87.75,3,1.68,3.37,2.81q.55,1.13,2,5.06c.93,2.62,1.41,3.75,1.41,3.37-1.13,1.12-1.69,1.88-1.69,2.25s.28.65.84.84,1.22.38,2,.56,1.31.84,1.69,2a38.63,38.63,0,0,1,0,9.27,76,76,0,0,0,0,13.21q-6.2,2.25-6.19,8.43c-1.12,0-1.68-.65-1.68-2a6.44,6.44,0,0,0-1.13-3.65c-1.5,0-2.34.47-2.52,1.4a5.8,5.8,0,0,0,.28,3.09,15.38,15.38,0,0,0,1.4,3.1q.84,1.4.84.84,0,.56-4.49,7a42.79,42.79,0,0,1-9,9.84,3.75,3.75,0,0,1-3.09-.28c-1.32-.56-2.16-.48-2.53.28a28.94,28.94,0,0,1-4.5,2.53q-3.94,2-9.55.28a5.46,5.46,0,0,1-2.25-3.37c-.38-1.5-1.5-2.25-3.37-2.25-1.51,0-2.35-1-2.53-3.09s-1.22-2.91-3.09-2.53q-2.27,3.93-2,2.53c.18-.94.46-2.25.84-3.94a19.76,19.76,0,0,0,.56-3.93q0-1.41-2.24,2.53-4.52-.57-5.62-3.94T1197,498.57ZM1247.58,457V450.8H1242V457Zm5.62,10.68V462h-5.62v5.62Z\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1443.15,313.67q-1.14,1.68,2,1.4c2.05-.18,3.09.1,3.09.84.37,1.88.18,3-.56,3.38A3.62,3.62,0,0,0,1446,321c-.76.76-.76,2,0,3.66s.75,3.09,0,4.21a10.07,10.07,0,0,1-3.09.84,3.09,3.09,0,0,0-2.53,1.41,33.38,33.38,0,0,0-2,10.12q-.28,5.63-5.9,5.05,1.68,9.57,2.81,14.9a38.65,38.65,0,0,1,0,13.2q-3.37-1.11-3.93.85c-.38,1.31-.76,2.72-1.13,4.21a5.05,5.05,0,0,1-2.53-1.68,3.64,3.64,0,0,0-3.09-1.13q0,6.75,5.62,7.87a19.48,19.48,0,0,1-6.46,10.68q-4.79,3.93-4.78,12.36c-1.5,0-2.16-.65-2-2a3.49,3.49,0,0,0-.85-3.1c-1.88.76-2.9,1.6-3.09,2.53a4.77,4.77,0,0,0,.56,3.09c.57,1.13,1.22,2.35,2,3.66a4.4,4.4,0,0,1,.56,3.65c-1.88,0-2.62.94-2.25,2.81a5.87,5.87,0,0,1-.56,4.5,9.76,9.76,0,0,1-2.81,2.81c-1.5,1.12-2.25,1.88-2.25,2.24a6.72,6.72,0,0,0,.29,4.22c.56,1.69.46,2.91-.29,3.65-.37.76-1.31.85-2.81.28s-2.44-.65-2.81-.28a9.55,9.55,0,0,0,0,6.47,11.23,11.23,0,0,1,0,7,6,6,0,0,1-4.21-.28,7.5,7.5,0,0,1-2.25-2l-1.68-2.24a3,3,0,0,0-2.53-1.13c.37.76.28,2.06-.29,3.94s-.47,3,.29,3.37c0,.37.84.47,2.53.28s2.71-.28,3.09-.28a4.2,4.2,0,0,1-1.69,4.49q-2.25,1.69,1.69,6.19a6.08,6.08,0,0,0-4.5,1.68l-3.09,3.09a8.56,8.56,0,0,1-2.81,2q-1.41.57-3.65-1.69c-.76,3,0,4.5,2.24,4.5a32.07,32.07,0,0,1,6.19.56c-1.88,1.5-2.45,3.94-1.69,7.31s.37,6.18-1.12,8.43c-.38,0-1.32-.09-2.81-.28s-2.45-.09-2.81.28c0,.75.65,1.78,2,3.09a3.39,3.39,0,0,1,.85,4.21c.36-.74,0-.36-1.13,1.13s-1.68,2.06-1.68,1.68a21,21,0,0,0-2.25,5.62q-1.14,3.93,0,12.37c-1.5,0-2.35.56-2.53,1.69a20.08,20.08,0,0,0-.28,3.37q-2.25-1.14-9.56-2.81c-4.87-1.13-7.5-.94-7.86.56-.76-1.12-1.6-2.25-2.53-3.37a16.54,16.54,0,0,1-2.53-4.5c-1.88,1.13-2.25,2.34-1.13,3.65s.75,3.46-1.12,6.47q-4.5.56-5.9-1.41t-5.9-.84a13.82,13.82,0,0,1,4.21-3.09q2-.84,4.78-2-.57-2.25-4.5-3.65a19.78,19.78,0,0,0-6.18-1.41,13.51,13.51,0,0,0-7.87,1.13q-3.37,1.68-3.37-1.13a16.49,16.49,0,0,0-5.62,7.31,8,8,0,0,0-5.06-1.41,31.69,31.69,0,0,1-3.93.28,5.88,5.88,0,0,1-3.09-.84q-1.41-.84-2-5.34a32.64,32.64,0,0,0,5.06,1.69c.37,0,.18-.38-.56-1.13a30.93,30.93,0,0,1-2.81-3.37,8.18,8.18,0,0,1-1.69-5.06c-1.88.76-2.72,1.5-2.53,2.25A9.47,9.47,0,0,0,1308,505a8.84,8.84,0,0,1,1.12,2.81c.18.93-.48,1.78-2,2.53-1.5,0-2.25-.56-2.25-1.69a16.68,16.68,0,0,0-.56-3.93c-.37-1.12-.84-1.6-1.4-1.4a1.29,1.29,0,0,0-.85,1.4,11.45,11.45,0,0,1-6.74-4.21,43.2,43.2,0,0,0-4.5-5.34c-.74-.75-.93-1.41-.56-2s-.37-.84-2.25-.84c-1.12,0-1.21-.28-.28-.85s2-1.12,3.09-1.68a4.63,4.63,0,0,0,2-1.41c.19-.37-1.21-.56-4.21-.56a17.86,17.86,0,0,0,1.12-10.68q-1.12-5.06,3.37-12.36c0-3,1.13-4.12,3.37-3.37q3.38-1.12.85-5.62c-1.69-3-2-5.43-.85-7.31a2.23,2.23,0,0,1,2.81-.28c1.13.56,2.07.1,2.81-1.41,0-1.12-1.12-1.68-3.37-1.68s-3-.37-2.25-1.13a1.59,1.59,0,0,0,1.13-.56c.38-.37.66-.56.84-.56s.48-.18.84-.56a24.31,24.31,0,0,1,2.81-1.13q.57-2.24-1.68-1.68c-1.49.37-1.87.94-1.13,1.68-1.87.38-2.61.1-2.24-.84a29.79,29.79,0,0,1,1.68-3.37,7.76,7.76,0,0,0,1.13-3.94c0-1.3-1.13-2-3.38-2,0-2.62,1-3.38,3.09-2.25s2.91,1.88,2.53,2.25c1.88-.75,2.25-2.44,1.13-5.06s-.75-6,1.12-10.12h5.06c0-1.49-.66-2.24-2-2.24a6.92,6.92,0,0,1-3.09-.57,16.18,16.18,0,0,0,.28-5.34c-.19-2.05-.28-3.93-.28-5.62a7.7,7.7,0,0,1,.84-3.93c.57-.93,2-1,4.22-.28.75-2.25.56-3.65-.56-4.22a10.2,10.2,0,0,0-4.5-.84c1.5-3.37,4.3-6,8.43-7.87a18.23,18.23,0,0,1,0-6.46,50.28,50.28,0,0,1,1.41-5.06c.56-1.69,1-3.37,1.4-5.06a18.71,18.71,0,0,0,0-6.46q3.38-.56,3.94-2.25a8,8,0,0,0,.28-3.65,11.16,11.16,0,0,1,0-3.65c.18-1.13,1.4-2.25,3.65-3.38-1.88-1.87-2.53-3.37-2-4.49a35.42,35.42,0,0,0,2-5.62,9.35,9.35,0,0,0-.56-2.81,2.53,2.53,0,0,1,.56-2.81h2.25a32.37,32.37,0,0,0,2.25-12.09q0-6.45,1.12-7.58,0-.56,2.25.84a7.37,7.37,0,0,0,3.37,1.4,9.48,9.48,0,0,1,.56-2.24c.37-1.13,1.13-1.13,2.25,0,0-1.87-.66-2.81-2-2.81a11.35,11.35,0,0,1-3.65-.57q-1.12-2.81-.28-4.49c.56-1.13,1.12-2.15,1.69-3.09a19.87,19.87,0,0,0,1.4-2.81,7.94,7.94,0,0,0,0-4.22c2.62,1.88,4.12,2.25,4.5,1.13s2.24-1.5,5.62-1.13c0-1.87-.76-2.81-2.25-2.81a25.61,25.61,0,0,1-5.06-.56c1.49-1.12,2.53-3.46,3.09-7s1.13-6.92,1.69-10.11a22.38,22.38,0,0,1,2.53-7.59c1.12-1.87,3.18-2.05,6.18-.56-1.88-2.62-3.09-4.3-3.65-5.06a2.15,2.15,0,0,1-.57-2,12.91,12.91,0,0,1,1.13-2.24,15.94,15.94,0,0,0,1.4-5.34,9.82,9.82,0,0,1,3.94.56c.74.38,1.49.75,2.25,1.12l1.68-4.49q-3.93-2.25-5.06-4.5a3.55,3.55,0,0,0,1.41-3.65,6.15,6.15,0,0,1,.84-4.22c.37-.74,1.41-1.21,3.09-1.4s2.72-.65,3.09-1.41q0-1.11-1.68-3.09a4.5,4.5,0,0,1-1.13-4.21c0-.37.75-1.22,2.25-2.53s2.43-2.15,2.81-2.53v-2.81l-2.25-3.37c-.75-1.13-.75-2.62,0-4.5h1.13a63.28,63.28,0,0,1-.56-7.87,16.3,16.3,0,0,1,1.12-6.18q2.8-7.86,5.34-14.89a75.15,75.15,0,0,0,3.65-15.46,15.47,15.47,0,0,0,8.43-8.43,111,111,0,0,0,3.94-11.8,14.44,14.44,0,0,0-10.12-6.46,44.69,44.69,0,0,0-13.21.28c-4.69.75-9.55,1.4-14.61,2a28.31,28.31,0,0,1-14.33-2,22.11,22.11,0,0,1-3.37-2.81c-1.13-1.13-2.07-2.06-2.81-2.81a49,49,0,0,1-8.15-7.59q-4.21-4.77-13.21-4.78-.55-2.81-1.69-7.3c-.74-3-2.43-4.5-5-4.5-1.87,0-3-.47-3.38-1.4a9.41,9.41,0,0,1-.56-3.38,27.44,27.44,0,0,0-.28-3.93,4.27,4.27,0,0,0-2-3.09h-2.24c-.75-.75-.85-1.87-.29-3.37s.66-2.44.29-2.82a50.13,50.13,0,0,1-5.06-3.37q-.55-.56-1.13-8.43c0-.37.1-1.4.28-3.09s.1-2.71-.28-3.09c-.74-.37-2.43-1.31-5.05-2.81s-3.38-4.5-2.25-9a24.06,24.06,0,0,0,10.39,0c2.81-.75,5.44-1.49,7.87-2.25s4.88-1.59,7.31-2.53a24.44,24.44,0,0,1,8.71-1.4,19.22,19.22,0,0,0-2,3.93,14.4,14.4,0,0,0-.84,5.06c1.87-.37,2.81-1.31,2.81-2.81s1.12-2.25,3.37-2.25q2.81.57,2.25-2.81c-.38-2.25-.19-3.56.56-3.93a3.3,3.3,0,0,1,2.81,1.68,17.69,17.69,0,0,0,2.25,2.81c.75.76,1.21.76,1.41,0a50.68,50.68,0,0,0,.28-7.3q3.36,1.68,9,.28t11.8-3.37a73.26,73.26,0,0,1,12.65-2.82,20.44,20.44,0,0,1,12.64,2.53c-2.25-1.87-3.84-3.17-4.78-3.93s-1.22-1.31-.84-1.69,2.25-.18,5.62.57a65.22,65.22,0,0,1,6.46,1.68c3.94,1.13,6.84.56,8.72-1.68a11.47,11.47,0,0,1,4.49-3.38,41.08,41.08,0,0,1,7.59-2.81,21.69,21.69,0,0,1,8.43-.56,11.87,11.87,0,0,1,7,3.37c1.88-1.12,3-2.24,3.38-3.37s1.49-2.05,3.37-2.81c-.76.38-.56,1.13.56,2.25s2.06,1.32,2.81.56a50,50,0,0,1,5.34-3.37,18.27,18.27,0,0,1,9.27-2.81q5.06.57,7.59,1.12T1446,36c1.49,0,2.15-1,2-3.09a15.71,15.71,0,0,1,.28-5.34q11.24-.55,20.51-1.4t22.76-1.41A71.63,71.63,0,0,0,1505,22.54a32.57,32.57,0,0,1,11.8-1.12,34.51,34.51,0,0,1,7,.56c1.68.38,2.33,2.25,2,5.62,1.87-.74,2.81-2,2.81-3.65s-.94-2.53-2.81-2.53a12.11,12.11,0,0,1,10.11-3.93q5.61.56,11.8.56c.37,0,1.41-.09,3.09-.28a50.62,50.62,0,0,1,5.62-.28h5.91a9.76,9.76,0,0,1,3.93.56q1.68,2.82,2.81,2t9.55-2q2.81,0,5.91.28a20.59,20.59,0,0,0,5.9-.28v11.8c1.49.75,2.53.47,3.09-.84a11.36,11.36,0,0,0,.84-4.5,13.58,13.58,0,0,0-.84-4.78,2.37,2.37,0,0,0-3.09-1.68c.37-2.25,1.59-3.46,3.65-3.66a19.34,19.34,0,0,1,6.46.57q3.38.84,6.75,1.4c2.24.38,3.74,0,4.49-1.12,1.87-1.87,2.72-2.25,2.53-1.13s.09,1.51.85,1.13a3.31,3.31,0,0,0,2.81-1.69,6.93,6.93,0,0,0,1.12-1.68,71.33,71.33,0,0,1,9.55,3.09q6.75,2.52,17.43.28a28.37,28.37,0,0,0,11.52,10.11A21.4,21.4,0,0,1,1668,36a9.78,9.78,0,0,1,5.34.28c1.31.57,2.53,1.13,3.66,1.69a40.64,40.64,0,0,0,3.93,1.68,8.33,8.33,0,0,0,5.62-.28,57.4,57.4,0,0,1,4.78,7.31,8.17,8.17,0,0,0,7.59,4.5,11.06,11.06,0,0,1,6.46,3.09,52.43,52.43,0,0,1,5.34,6.46c.74.76,1,1.32.84,1.69s.65.56,2.53.56q6.18,1.12,6.18,9-.57,4.5,3.09,4.22a6.47,6.47,0,0,1,5.9,2.53A5.43,5.43,0,0,1,1732,83a4.29,4.29,0,0,0,3.94,3.65,44.91,44.91,0,0,1-2.25,15.18q-2.25,6.19-4.5,11.8-30.92-2.81-63.22-5.34a457.15,457.15,0,0,0-66-.28c-3,0-4.87.38-5.62,1.12a7.6,7.6,0,0,1-3.93,1.69,64.24,64.24,0,0,1-12.09,0,65.86,65.86,0,0,0-12.08,0,186.46,186.46,0,0,0-33.44,5.34,111.71,111.71,0,0,1-31.75,3.65q.56,11.25.56,22.48a62.34,62.34,0,0,1-2.81,19.67,2.52,2.52,0,0,0-.56,2.81,9.52,9.52,0,0,1,.56,2.25h-3.94a40.54,40.54,0,0,0-1.12,9.84c0,3.56-.75,6.27-2.25,8.15-.38,1.12-1.31,1.68-2.81,1.68a4.57,4.57,0,0,0-3.37,1.13c-.38.75-.28,1.87.28,3.37s.47,2.62-.28,3.37a21,21,0,0,0-3.37,4.78q-1.7,3.09-3.37,6.46,1.11,1.13,4.49.56a17.56,17.56,0,0,0-4.49,6.75,22.61,22.61,0,0,0-1.13,7.3c0,2.63.09,5.06.28,7.31a16.66,16.66,0,0,1-.84,6.74c0,.76-.75,1.22-2.25,1.41s-2.25.66-2.25,1.4a14.12,14.12,0,0,0-.84,8.15,7.86,7.86,0,0,1-2,7l-2.81,2.81a13.83,13.83,0,0,0-1.4,7.3,16.74,16.74,0,0,1-1.41,7.87l-1.68,2.25a9.12,9.12,0,0,0,.28,2.25,3.24,3.24,0,0,1-.28,2.25,1.81,1.81,0,0,1-1.69,1.12,5.05,5.05,0,0,0-2.25.56l1.13-4.49a1.67,1.67,0,0,1-1.13.56.5.5,0,0,0-.56.56,2.53,2.53,0,0,0-.28,2,6.14,6.14,0,0,1,.28,2,.5.5,0,0,0-.56.57,8.64,8.64,0,0,0,0,6.18,8.75,8.75,0,0,1,0,6.18,9.24,9.24,0,0,1-3.09,2.81c-1.69,1.12-2.53,2.06-2.53,2.81a19.15,19.15,0,0,0-.28,8.71,31.21,31.21,0,0,1,.28,9.27A11.65,11.65,0,0,0,1443.15,313.67ZM1283,469.34c.37-1.49.84-2,1.4-1.68a3.54,3.54,0,0,1,1.12,2.53,28,28,0,0,1,.29,4.21v2.81q-1.12,3.94-2.81,2C1281.85,477.87,1281.85,474.6,1283,469.34Zm7.86-400.71a6,6,0,0,0,5.06,0,17,17,0,0,0,4.78-2.81,6,6,0,0,0,2.25-3.37c.19-1.13-.47-1.69-2-1.69,0,1.88-.65,2.81-2,2.81a40.36,40.36,0,0,1-4.49-.28,6.37,6.37,0,0,0-3.94.56C1289.63,64.41,1289.72,66,1290.84,68.63ZM1342,495.2a32.49,32.49,0,0,1-1.41-8.43c-.19-3.38-1.22-5.81-3.09-7.31a6.18,6.18,0,0,1,.28,4.78,14.31,14.31,0,0,1-2,3.37,6.57,6.57,0,0,0-1.4,2.81c-.19.94.84,1.6,3.09,2,0-1.87.93-2.62,2.81-2.25a14,14,0,0,0,0,5.62C1340.67,497.64,1341.23,497.44,1342,495.2Zm11.8,27.54a3.13,3.13,0,0,1-2.81,3.37,10.33,10.33,0,0,1-5.34-.28c-1.69-.57-2.63-1.22-2.81-2s1.59-1.12,5.34-1.12Zm1.69-268.65c.74,1.13,1.87.94,3.37-.56Zm19.67,249.26a22.24,22.24,0,0,0-7-2,40.16,40.16,0,0,0-8.15-.28c-2.62.19-3.93.84-3.93,2a86.92,86.92,0,0,1,10.11,1.41q3.93.84,9.56,2.53C1377.2,505.5,1377,504.28,1375.15,503.35Zm-17.43-261.06h1.13a1.14,1.14,0,0,1,.28-.84,2.28,2.28,0,0,0,.28-1.41Zm19.67-194.46a5.06,5.06,0,0,0,4.78,1.13,24,24,0,0,0,5.62-1.69c1.69-.74,2.62-1.59,2.81-2.53s-1-1.59-3.65-2V45c-.76.38-2.81.76-6.18,1.13S1376.27,47.09,1377.39,47.83Zm80.37,231.55.56-.56a1.63,1.63,0,0,1-.56,1.13Zm92.73-258q-9.56,0-12.36,6.18,4.48,3.95,7.31.84A39.47,39.47,0,0,0,1550.49,21.42Zm2.81,0c-.75,0-1.68,1.22-2.81,3.65a18.23,18.23,0,0,1-2.81,4.78A6.93,6.93,0,0,0,1553,29a4.93,4.93,0,0,0,2.25-3.09,5.72,5.72,0,0,0-.28-3.1C1554.61,21.89,1554.05,21.42,1553.3,21.42Zm70.82,3.37c.74-3,.56-5.14-.56-6.46a11.43,11.43,0,0,0-4.5-3.09c-.76,2.62-.56,4.59.56,5.9A17.88,17.88,0,0,0,1624.12,24.79Z\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1493.16,498.57q-1.12-4.5.28-6.46a22.44,22.44,0,0,0,2.53-4.78c0-1.49-.37-2.34-1.12-2.53s-1.6.19-2.53,1.12a10.7,10.7,0,0,0-2.25,3.37,3.65,3.65,0,0,0,.28,3.66c-1.12,0-1.6-1.31-1.4-3.94s.37-5.14.56-7.58a19.45,19.45,0,0,0-.28-5.9q-.57-2.25-4.5,1.12-3.37-1.68-2-4.22c.94-1.68,2.71-2.33,5.34-2q-5.62-5.61,2.24-5.62-2.25-2.25-1.68-3.66a7.4,7.4,0,0,1,2.25-2.81q1.68-1.39,3.37-3.09a6.06,6.06,0,0,0,1.68-4.49,10.65,10.65,0,0,1,6.19-.56q3.91.56,7.58,1.4a30.2,30.2,0,0,0,6.75.84,6.47,6.47,0,0,0,4.77-1.68V448a3.75,3.75,0,0,1,3.09.28c1.31.56,2.16.47,2.53-.28.75-1.13,1.31-1.69,1.69-1.69a2.76,2.76,0,0,1,1.4.56,6.64,6.64,0,0,0,2.53.85,38.49,38.49,0,0,0,5.62.28c2.62,0,4.5-.47,5.62-1.41s3-1.4,5.62-1.4q-1.12,4.5,1.69,5.62c1.87.75,3,1.68,3.37,2.81q.55,1.13,2,5.06c.93,2.62,1.4,3.75,1.4,3.37-1.12,1.12-1.68,1.88-1.68,2.25s.28.65.84.84,1.21.38,2,.56,1.31.84,1.68,2a38.63,38.63,0,0,1,0,9.27,78,78,0,0,0,0,13.21q-6.18,2.25-6.18,8.43c-1.12,0-1.68-.65-1.68-2a6.44,6.44,0,0,0-1.13-3.65c-1.5,0-2.34.47-2.53,1.4a6,6,0,0,0,.28,3.09,15.41,15.41,0,0,0,1.41,3.1q.84,1.4.84.84,0,.56-4.49,7a42.81,42.81,0,0,1-9,9.84A3.75,3.75,0,0,1,1535,518c-1.31-.56-2.16-.48-2.53.28a28.06,28.06,0,0,1-4.49,2.53q-3.94,2-9.56.28a5.45,5.45,0,0,1-2.24-3.37c-.38-1.5-1.51-2.25-3.38-2.25-1.5,0-2.34-1-2.53-3.09s-1.22-2.91-3.09-2.53c-1.5,2.62-2.16,3.46-2,2.53s.46-2.25.84-3.94a19.76,19.76,0,0,0,.56-3.93q0-1.41-2.25,2.53-4.5-.57-5.62-3.94T1493.16,498.57ZM1543.74,457V450.8h-5.62V457Zm5.62,10.68V462h-5.62v5.62Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRiptText);\nexport default __webpack_public_path__ + \"static/media/RIPT_Text.1b39fa215e6170581bdc9cbadbbcfec6.svg\";\nexport { ForwardRef as ReactComponent };","var _style, _g, _g2, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgAccountIconUnselect(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 48 48\",\n    style: {\n      enableBackground: \"new 0 0 48 48\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:none;}\\r\\n\")), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 4,\n    className: \"st0\",\n    width: 40,\n    height: 40\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 4,\n    y: 4,\n    className: \"st0\",\n    width: 40,\n    height: 40\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Layer_7\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M28.4,24.5c3.1-2.5,3.6-6.9,1.1-10s-6.9-3.6-10-1.1s-3.6,6.9-1.1,10c0.3,0.4,0.7,0.8,1.1,1.1c-5.1,1.9-8.6,6.8-8.6,12.2 v2.4l13,4.1l13-4.1v-2.4C37,31.3,33.6,26.4,28.4,24.5z M19.3,19c0-2.6,2.1-4.7,4.7-4.7s4.7,2.1,4.7,4.7s-2.1,4.7-4.7,4.7 S19.3,21.6,19.3,19z M13.4,36.7c0.7-5.9,5.9-11.3,11.8-10.6c5,0.6,8.9,5.6,9.4,10.6v1.8l-2.3,2.3l-8.2,1.6l-10.6-1.8l-0.2-2v-1.9 H13.4z\"\n  }))), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24,4C13,4,4,13,4,24s9,20,20,20s20-9,20-20S35,4,24,4z M24,41.8c-9.9,0-17.8-8-17.8-17.8S14.1,6.2,24,6.2s17.8,8,17.8,17.8 S33.9,41.8,24,41.8z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAccountIconUnselect);\nexport default __webpack_public_path__ + \"static/media/account_icon_unselect.8e94e9797d2c9aa4d94b6acd4c52d469.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgMenuIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: 48,\n    viewBox: \"0 96 960 960\",\n    width: 48,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M150 816q-12.75 0-21.375-8.675-8.625-8.676-8.625-21.5 0-12.825 8.625-21.325T150 756h660q12.75 0 21.375 8.675 8.625 8.676 8.625 21.5 0 12.825-8.625 21.325T810 816H150Zm0-210q-12.75 0-21.375-8.675-8.625-8.676-8.625-21.5 0-12.825 8.625-21.325T150 546h660q12.75 0 21.375 8.675 8.625 8.676 8.625 21.5 0 12.825-8.625 21.325T810 606H150Zm0-210q-12.75 0-21.375-8.675-8.625-8.676-8.625-21.5 0-12.825 8.625-21.325T150 336h660q12.75 0 21.375 8.675 8.625 8.676 8.625 21.5 0 12.825-8.625 21.325T810 396H150Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMenuIcon);\nexport default __webpack_public_path__ + \"static/media/menu_icon.59c892fa6c63829abe4fa96cb60ba8ee.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport \"../CSS/Navbar.css\" //Style sheet for the navigation bar\r\n\r\n//Import images\r\nimport logo from \"../Images/Logo_icon.svg\"\r\nimport ript_text from \"../Images/RIPT_Text.svg\"\r\nimport user_icon_unactive from \"../Images/Icons/account_icon_unselect.svg\"\r\nimport menu_icon from \"../Images/Icons/menu_icon.svg\"\r\n\r\n//Setup active style for navlinks\r\nconst active_link = {\r\n    textDecoration: \"none\",\r\n    color: \"#f15a24\",\r\n    fontWeight: \"bold\"\r\n}\r\n\r\nconst unactive_link = {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\",\r\n}\r\n\r\nclass Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"nav_container\">\r\n\r\n                {/*The logo and title sit here*/}\r\n                <div>\r\n                    <NavLink to=\"/\" className=\"nav_logo_and_title\">\r\n                        <img src={logo} alt=\"logo\" className=\"nav_logo\"></img>\r\n                        <img src={ript_text} alt=\"ript\" className=\"nav_logo_text\"></img>\r\n                    </NavLink>\r\n                </div>\r\n            \r\n                {/*Links to other pages. The styling is all weird cause of the new API*/}\r\n                <ul className=\"nav_link\">\r\n                    <li><NavLink to=\"/about\" style={({ isActive }) => isActive ? active_link : unactive_link}>About</NavLink></li>\r\n                    <li><NavLink to=\"/technical\" style={({ isActive }) => isActive ? active_link : unactive_link}>How it Works</NavLink></li>\r\n                    <li><NavLink to=\"/sessions\" style={({ isActive }) => isActive ? active_link : unactive_link}>Sessions</NavLink></li>\r\n                    {/*<li><NavLink to=\"/trends\" style={({ isActive }) => isActive ? active_link : unactive_link}>Trends</NavLink></li> */}\r\n                    <NavLink to=\"/profile\" \r\n                        style={({ isActive }) => isActive ? active_link : unactive_link}\r\n                        className={({ isActive }) => isActive ? \"nav_active_icon\" : \"nav_inactive_icon\"}>\r\n                        <img src={user_icon_unactive} alt=\"user_icon\" className=\"nav_icon profile_icon\"></img>\r\n                        <p className=\"profile_text\">Profile</p>\r\n                    </NavLink>\r\n                </ul>\r\n\r\n                {/*User icon and burger menu*/}\r\n                <NavLink to=\"\" className=\"menu_icon\"><img src={menu_icon} alt=\"menu_icon\" className=\"nav_icon\"></img></NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Footer_container__9FM9d\",\"link\":\"Footer_link__A3wKm\",\"icon\":\"Footer_icon__2b+jp\"};","var _style, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGithubIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 24 24\",\n    style: {\n      enableBackground: \"new 0 0 24 24\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n\\t.st0{fill:#EEEEEE;}\\r\\n\")), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M12,0C5.4,0,0,5.4,0,12c0,5.3,3.4,9.8,8.2,11.4C8.8,23.5,9,23.1,9,22.8v-2.2c-3.3,0.7-4-1.4-4-1.4 c-0.5-1.4-1.3-1.8-1.3-1.8c-1.1-0.7,0.1-0.7,0.1-0.7c1.2,0.1,1.8,1.2,1.8,1.2c1.1,1.8,2.8,1.3,3.5,1c0.1-0.8,0.4-1.3,0.8-1.6 C7.1,17,4.3,16,4.3,11.4c0-1.3,0.5-2.4,1.2-3.2C5.5,7.9,5,6.6,5.7,5c0,0,1-0.3,3.3,1.2c1-0.3,2-0.4,3-0.4c1,0,2,0.1,3,0.4 C17.3,4.7,18.3,5,18.3,5c0.7,1.7,0.2,2.9,0.1,3.2c0.8,0.8,1.2,1.9,1.2,3.2c0,4.6-2.8,5.6-5.5,5.9c0.4,0.4,0.8,1.1,0.8,2.2v3.3 c0,0.3,0.2,0.7,0.8,0.6C20.6,21.8,24,17.3,24,12C24,5.4,18.6,0,12,0z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithubIcon);\nexport default __webpack_public_path__ + \"static/media/github_icon.94c44354e10ba0da8b0e86a765afa3f8.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\"\r\nimport styles from \"../CSS/Footer.module.css\"\r\n\r\nimport github_icon from \"../Images/Icons/github_icon.svg\"\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className={styles.container}>\r\n                <ul>\r\n                    <li>This is an engineering capstone project by students. <br></br><strong>Copyright © 2023</strong></li>\r\n                    <li>brlnoble@hotmail.com</li>\r\n                    <li><a href=\"https://github.com/brlnoble/RIPT_Capstone\" target=\"_blank\" rel=\"noreferrer\" className={styles.link}><img src={github_icon} alt=\"github\" className={styles.icon}></img>Github</a></li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\nimport {Outlet} from \"react-router-dom\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport Footer from \"../Components/Footer\"\r\n\r\nconst Layout = () => {\r\n  return (\r\n    <>\r\n      <Navbar></Navbar>\r\n      <Outlet />\r\n      <Footer></Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../CSS/Box.css\"\r\n\r\nclass ListBox extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <h1>{this.props.title_text}</h1>\r\n\r\n                {/*Makes a list of the array passed in*/}\r\n                <ul>\r\n                    {this.props.show_text.map( (item) => (\r\n                        <li id={item.text}>{item.text}</li>\r\n                    ))}\r\n                </ul>\r\n\r\n                {/*Button to redirect pages*/}\r\n                <Link to={this.props.redirect} className=\"react_link_button\"><button>{this.props.button_text}</button></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListBox","import React from \"react\";\r\n\r\nimport ListBox from \"../Components/ListBox\"\r\n\r\nimport \"../CSS/General.css\"\r\nimport \"../CSS/Home.css\"\r\n\r\nimport ript_text from \"../Images/RIPT_Text.svg\"\r\n\r\n//The information to be displayed in the boxes\r\nconst profile = [{text: 'Update personal information'}, {text: 'Change your settings'}, {text: 'View your average stats'}]\r\nconst sessions = [{text: 'View all your past training sessions'}, {text: 'Get an extensive breakdown of all your metrics'}]\r\nconst progress = [{text: 'See how the project was made'}, {text: 'See who was involved'}]\r\n\r\n//Need to link to the API\r\nconst user_fullname = 'Brandon'\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className='main_container'>\r\n\r\n                {/*Little greeting, customize for user's name*/}\r\n                <div className='greeting'>\r\n                    <h1>Welcome {user_fullname}, let's get </h1><img src={ript_text} alt=\"ript\"></img>\r\n                </div>\r\n\r\n                {/*Information boxes with links to pages*/}\r\n                <div className='boxes'>\r\n                    <ListBox \r\n                    title_text=\"My Profile\" \r\n                    show_text={profile}\r\n                    button_text=\"Go to profile\"\r\n                    redirect=\"/profile\">\r\n                    </ListBox>\r\n\r\n                    <ListBox \r\n                    title_text=\"Training Sessions\" \r\n                    show_text={sessions}\r\n                    button_text=\"View sessions\"\r\n                    redirect=\"/sessions\">\r\n                    </ListBox>\r\n\r\n                    <ListBox \r\n                    title_text=\"About the Project\" \r\n                    show_text={progress}\r\n                    button_text=\"See how it works\"\r\n                    redirect=\"/about\">\r\n                    </ListBox>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","// extracted by mini-css-extract-plugin\nexport default {\"profile_box\":\"ProfileBox_profile_box__OeMMc\",\"profile_pic\":\"ProfileBox_profile_pic__outjv\",\"info_titles\":\"ProfileBox_info_titles__3rao9\",\"info_text\":\"ProfileBox_info_text__9Vlkk\",\"user_info\":\"ProfileBox_user_info__lAilm\",\"user_fullname\":\"ProfileBox_user_fullname__k61lj\"};","import React from \"react\"\r\nimport {Link} from \"react-router-dom\"\r\n\r\nimport \"../../CSS/Box.css\"\r\nimport styles from \"../../CSS/Profile/ProfileBox.module.css\"\r\n\r\nfunction getStance(stance) {\r\n    if(stance == true) {\r\n        return \"Orthodox\"\r\n    }\r\n    else {\r\n        return \"Southpaw\"\r\n    }\r\n}\r\n\r\nclass ProfileBox extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className={styles.profile_box}>\r\n\r\n                    {/*Profile picture and first name*/}\r\n                    <img src={this.props.user.picture} alt=\"profile_picture\" className={styles.profile_pic}></img>\r\n                    <h1 className={styles.user_fullname}>{this.props.user.first_name}</h1>\r\n                    \r\n                    <div className={styles.user_info}>\r\n                        \r\n                        {/*Labels for the user information*/}\r\n                        <div className={styles.info_titles}>\r\n                            <h2>Username: </h2>\r\n                            <h2>Email: </h2>\r\n                            <h2>Birthday: </h2>\r\n                            <br className={styles.divide_line}></br>\r\n                            <h2>Member Since: </h2>\r\n                            <h2>Sessions: </h2>\r\n                            <h2>Stance: </h2>\r\n                        </div>\r\n\r\n                        {/*The user's actual information*/}\r\n                        <div className={styles.info_text}>\r\n                            <h2>{this.props.user.username}</h2>\r\n                            <h2>{this.props.user.email}</h2>\r\n                            <h2>{this.props.user.birthday.slice(0,10)}</h2>\r\n                            <br></br>\r\n                            <h2>{this.props.user.membership.slice(0,10)}</h2>\r\n                            <h2>{this.props.user.session_num}</h2>\r\n                            <h2>{getStance(this.props.user.isorthodox)}</h2>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        {/*Buttons we might not actually need*/}\r\n                        <Link className=\"react_link_button\"><button className=\"react_link_button\">Update my info</button></Link>\r\n                        <Link className=\"react_link_button\"><button className=\"react_link_button\">Change my password</button></Link>\r\n                    </div>\r\n\r\n                </div>                \r\n            </div>               \r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileBox","// extracted by mini-css-extract-plugin\nexport default {\"average_box\":\"AverageBox_average_box__xbRaJ\",\"average_title\":\"AverageBox_average_title__2y-nB\",\"metric_box\":\"AverageBox_metric_box__lNcCl\",\"context\":\"AverageBox_context__dP7QA\"};","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../../CSS/Box.css\"\r\nimport styles from \"../../CSS/Profile/AverageBox.module.css\"\r\n\r\nclass AverageBox extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className={styles.average_box}>\r\n                    <h1 className={styles.average_title}>My Average Metrics</h1>\r\n\r\n                    <div className={styles.metric_box}>\r\n                        <h2>Force</h2>\r\n                        <h3>{this.props.user.forces}</h3>\r\n                        <p>+10% this week</p>\r\n\r\n                        <h2>Accuracy</h2>\r\n                        <h3>{this.props.user.accuracy}</h3>\r\n                        <p>-8% this week</p>\r\n\r\n                        <h2>Reation Time</h2>\r\n                        <h3>{this.props.user.reaction}</h3>\r\n                        <p>+3% this week</p>\r\n\r\n                        <h2>Form Score</h2>\r\n                        <h3>{this.props.user.form}</h3>\r\n                        <p>+1% this week</p>\r\n\r\n                        <h2>Stability</h2>\r\n                        <h3>{this.props.user.stability}</h3>\r\n                        <p>-11% this week</p>\r\n                    </div>\r\n\r\n                    <p className={styles.context}>Your average metrics are based off your last 10 sessions</p>\r\n\r\n                    <Link to=\"/sessions\" className=\"react_link_button\"><button>View Sessions</button></Link>\r\n                    {/* <Link to=\"/trends\" className=\"react_link_button\"><button>See My Trends</button></Link> */}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AverageBox","import React from \"react\";\r\n\r\n\r\nimport \"../CSS/General.css\"\r\nimport \"../CSS/Profile/Profile.css\"\r\n\r\nimport ProfileBox from \"../Components/Profile/ProfileBox\";\r\nimport AverageBox from \"../Components/Profile/AverageBox\";\r\n\r\n//Selects the user to view\r\n/*async function BrandonClick() {\r\n    console.log(\"Brandon\");\r\n}\r\n\r\nfunction JameClick() {\r\n    console.log(\"Jame\")\r\n}\r\n\r\nfunction LabibClick() {\r\n    console.log(\"Labib\")\r\n}\r\n\r\nfunction HunterClick() {\r\n    console.log(\"Hunter\")\r\n}*/\r\n\r\n//Main class\r\nclass Profile extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"main_container\">\r\n                <div className=\"profile_container\">\r\n                    {/*User's profile on left side*/}\r\n                    <ProfileBox user={this.props.user.profile}></ProfileBox>                    \r\n\r\n                    {/*Average statistics on right side*/}\r\n                    <AverageBox user={this.props.user.averageMetrics}></AverageBox>\r\n                </div>\r\n\r\n                {/* <h2 className=\"user_select_title\">Select User to Display</h2>\r\n                <div className=\"user_select\">\r\n                    <button onClick={BrandonClick}>Brandon</button>\r\n                    <button onClick={JameClick}>Jame</button>\r\n                    <button onClick={LabibClick}>Labib</button>\r\n                    <button onClick={HunterClick}>Hunter</button>\r\n                </div> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile","// extracted by mini-css-extract-plugin\nexport default {\"header_box\":\"SessionBoxHeader_header_box__plePV\",\"time_box\":\"SessionBoxHeader_time_box__6fW91\",\"header\":\"SessionBoxHeader_header__nmJQt\",\"expand_icon\":\"SessionBoxHeader_expand_icon__DSzfH\"};","var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgExpandIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24 24H0V0h24v24z\",\n    fill: \"none\",\n    opacity: 0.87\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M15.88 9.29L12 13.17 8.12 9.29c-.39-.39-1.02-.39-1.41 0-.39.39-.39 1.02 0 1.41l4.59 4.59c.39.39 1.02.39 1.41 0l4.59-4.59c.39-.39.39-1.02 0-1.41-.39-.38-1.03-.39-1.42 0z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgExpandIcon);\nexport default __webpack_public_path__ + \"static/media/expand_icon.8d4a9ac9c10811c65db4a50b20d1c0b3.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\"\r\n\r\nimport \"../../CSS/Box.css\"\r\nimport styles from \"../../CSS/Session/SessionBoxHeader.module.css\"\r\n\r\nimport expand_icon from \"../../Images/Icons/expand_icon.svg\"\r\n\r\n//For converting month numeric to the long name\r\nfunction getMonthName(monthNumber) {\r\n    const date = new Date();\r\n    date.setMonth(parseInt(monthNumber)-1);\r\n  \r\n    return date.toLocaleString('en-US', { month: 'long' });\r\n}\r\n\r\nfunction SessionsBoxHeader(datetime, duration) {\r\n    console.log(datetime)\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.header}>\r\n\r\n                <div className={styles.header_box}>\r\n                    <h2>Personalized</h2>\r\n\r\n                    {/*Vertical line for styling*/}\r\n                    <span></span>\r\n\r\n                    {/*Keeps the date and time on top of each other*/}\r\n                    <div className={styles.time_box}>\r\n                        {/*Converts the datetime into something readable like \"March 19, 2023\" and \"00:30\"*/}\r\n                        <h3>{getMonthName(datetime.slice(5,7))} {datetime.slice(8,10)}, {datetime.slice(0,4)}</h3>\r\n                        <h3>{datetime.slice(11,16)}</h3>\r\n                    </div>\r\n\r\n                    {/*Vertical line for styling*/}\r\n                    <span></span>\r\n\r\n                    <h3>{duration.slice(4,9)}</h3>\r\n                </div>\r\n\r\n                <img src={expand_icon} alt=\"expand_icon\" className={styles.expand_icon}></img>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SessionsBoxHeader","import React from \"react\"\r\n\r\nclass QuadBox extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"quad_box\">\r\n                <p className=\"right_line bottom_line\">{this.props.quads[0]}</p>\r\n                <p className=\"bottom_line\">{this.props.quads[1]}</p>\r\n                <p className=\"right_line\">{this.props.quads[2]}</p>\r\n                <p>{this.props.quads[3]}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default QuadBox","import React from \"react\"\r\n\r\nimport QuadBox from \"./QuadBox\"\r\n\r\nclass MetricBreakdown extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3>{this.props.metricType}</h3>\r\n                <div className=\"metrics\">\r\n                    <p className=\"punch_average\">Session average:<br/> <strong>{this.props.metrics.avg} {this.props.units}</strong></p>\r\n            \r\n                    {/*This is to make the quadrants of the numerics*/}\r\n                    <QuadBox quads={this.props.metrics.quads}></QuadBox>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MetricBreakdown","import React from \"react\"\r\n\r\nimport MetricBreakdown from \"./MetricBreakdown\"\r\n\r\nclass PunchMetrics extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"punch_container\">\r\n                <h2 className=\"punch_title\">{this.props.punch}</h2>\r\n\r\n                <div className=\"metric_grid\">\r\n                    <MetricBreakdown metricType=\"Force\" metrics={this.props.force} units=\"N\"></MetricBreakdown>\r\n                    <MetricBreakdown metricType=\"Accuracy\" metrics={this.props.accuracy} units=\"%\"></MetricBreakdown>\r\n                    <MetricBreakdown metricType=\"Reaction Time\" metrics={this.props.reaction} units=\"ms\"></MetricBreakdown>\r\n                    <MetricBreakdown metricType=\"Form\" metrics={this.props.form} units=\"%\"></MetricBreakdown>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PunchMetrics","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>();\n  let i: number, ilen: number;\n\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n\n  if (set.size === ilen) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } canvas.Chart\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * @namespace Chart.helpers.canvas\n */\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\n/**\n * @private\n */\nexport function _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param {canvas.Chart} chart - The chart instance.\n * @param {number} pixel - A pixel value.\n * @param {number} width - The width of the element.\n * @returns {number} The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n * @param {HTMLCanvasElement} canvas\n * @param {CanvasRenderingContext2D} [ctx]\n */\nexport function clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport function drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\n\nexport function drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    width = w ? w / 2 : radius;\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'rectRot':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n    /* falls through */\n  case 'cross':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'star':\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    rad += QUARTER_PI;\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n    ctx.moveTo(x - xOffsetW, y - yOffset);\n    ctx.lineTo(x + xOffsetW, y + yOffset);\n    ctx.moveTo(x + yOffsetW, y - xOffset);\n    ctx.lineTo(x - yOffsetW, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n    break;\n  case false:\n    ctx.closePath();\n    break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param {Point} point - The point to test\n * @param {object} area - The rectangle\n * @param {number} [margin] - allowed margin\n * @returns {boolean}\n * @private\n */\nexport function _isPointInArea(point, area, margin) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += font.lineHeight;\n  }\n\n  ctx.restore();\n}\n\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx, opts) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nexport function addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {Point, toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\nexport interface CanvasFontSpec extends FontSpec {\n  string: string;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\n * @param {object[]} [rootScopes] - The root option scopes\n * @param {string|boolean} [fallback] - Parent scopes fallback\n * @param {function} [getTarget] - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  });\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param {object} proxy - The Proxy returned by `_createResolver`\n * @param {object} context - Context object for scriptable/indexable options\n * @param {object} [subProxy] - The proxy provided for scriptable options\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\n * @private\n */\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  });\n}\n\n/**\n * @private\n */\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    // @ts-ignore\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\n\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\n\nexport interface SplinePoint {\n  x: number;\n  y: number;\n  skip?: boolean;\n\n  // Both Bezier and monotone interpolations have these fields\n  // but they are added in different spots\n  cp1x?: number;\n  cp1y?: number;\n  cp2x?: number;\n  cp2y?: number;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point} from '../types/geometric.js';\nimport type {SplinePoint} from './helpers.curve.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (an thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal meta data accordingly.\n\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing',\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outr radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n\n  id = scaleOptions.axis\n    || axisFromPosition(scaleOptions.position)\n    || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n\n  if (id) {\n    return id;\n  }\n\n  throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getDatasetArea(meta) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: xScale.left,\n      right: xScale.right,\n      top: yScale.top,\n      bottom: yScale.bottom\n    };\n  }\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta) || this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n\n    items.push({\n      // Text position\n      x: pointLabelPosition.x,\n      y,\n\n      // Text rendering data\n      textAlign,\n\n      // Bounding box\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if its not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @private\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guestimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","import React from \"react\";\r\nimport Chart from \"chart.js/auto\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n//Creates the data object required for the line chart\r\nfunction GetData(chartData,avg) {\r\n    return(\r\n        {\r\n            labels: Array.from(Array(chartData.length).keys()), //generates labels based on length of input array\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"#f15a24\",\r\n                borderColor: \"#f15a24\",\r\n                data: chartData, //adds the data to the graph\r\n              },\r\n\r\n              {\r\n                borderColor: \"#999\",\r\n                pointRadius: 0,\r\n                data: Array.from(Array(chartData.length)).fill(avg), //average value\r\n              }\r\n            ],\r\n          }\r\n    )\r\n};\r\n\r\n//Styles the plot\r\nconst options = {\r\n    plugins: {\r\n        legend: {\r\n            display: false\r\n        },\r\n\r\n        tooltip: { displayColors: false, //Hides the colour block\r\n            callbacks: { title: function(tooltipItems, data) {return ''; }} //Hides the X-label we aren't using \r\n        }\r\n    },\r\n\r\n    scales: { x: { display: false } }, //Removes the X lines\r\n\r\n    maintainAspectRatio: false,\r\n\r\n    \r\n}\r\n\r\nclass LineChart extends React.Component {\r\n    render() {\r\n        const myData = GetData(this.props.chartData,this.props.avg); //Creatse the data object based on the props\r\n\r\n        return (\r\n            <div style={{width: \"100%\",height: \"100%\"}}>\r\n                <Line data={myData} options={options}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default LineChart;","import React from \"react\"\r\n\r\nimport LineChart from \"../LineChart\"\r\n\r\nclass MetricPerformance extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h3>Performance</h3>\r\n                <p className=\"punch_average\">Session average:<br/> <strong>{this.props.avg} %</strong></p>\r\n                <LineChart avg={this.props.avg} chartData={this.props.chartData}></LineChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MetricPerformance","import React from \"react\"\r\nimport Collapsible from 'react-collapsible';\r\n\r\nimport SessionsBoxHeader from \"./SessionBoxHeader\";\r\nimport PunchMetrics from \"./PunchMetrics\";\r\nimport MetricPerformance from \"./MetricPerformance\"\r\n\r\nimport ript_text from \"../../Images/RIPT_Text.svg\"\r\n\r\n\r\nclass SessionBox extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"makeMeBig\">\r\n                    <Collapsible triggerOpenedClassName=\"collapsible_open\" triggerClassName=\"collapsible_close\" trigger={\r\n\r\n                        //Box with information that can be opened or collapsed\r\n                        SessionsBoxHeader(\r\n                            this.props.datetime,\r\n                            this.props.duration)}\r\n                        \r\n                    >\r\n                        <hr className=\"line_separator\"></hr>\r\n                        <div className=\"container_collapse\">\r\n\r\n                            {/*Create a metric box for each punch type analyzed*/}\r\n                            <PunchMetrics\r\n                                key={\"Hook\"}\r\n                                punch={\"Hook\"} \r\n                                force={this.props.data.metrics.hook.force} \r\n                                accuracy={this.props.data.metrics.hook.accuracy} \r\n                                reaction={this.props.data.metrics.hook.reaction}\r\n                                form={this.props.data.metrics.hook.form}>\r\n                            </PunchMetrics>\r\n\r\n                            <PunchMetrics\r\n                                key={\"Straight\"}\r\n                                punch={\"Straight\"} \r\n                                force={this.props.data.metrics.straight.force} \r\n                                accuracy={this.props.data.metrics.straight.accuracy} \r\n                                reaction={this.props.data.metrics.straight.reaction}\r\n                                form={this.props.data.metrics.straight.form}>\r\n                            </PunchMetrics>\r\n\r\n                            <PunchMetrics\r\n                                key={\"Uppercut\"}\r\n                                punch={\"Uppercut\"} \r\n                                force={this.props.data.metrics.uppercut.force} \r\n                                accuracy={this.props.data.metrics.uppercut.accuracy} \r\n                                reaction={this.props.data.metrics.uppercut.reaction}\r\n                                form={this.props.data.metrics.uppercut.form}>\r\n                            </PunchMetrics>\r\n                        </div>\r\n\r\n                        <div className=\"metrics_performance\">\r\n                            <MetricPerformance avg={this.props.data.metrics.performance.avg} chartData={this.props.data.metrics.performance.data}></MetricPerformance>\r\n                        </div>\r\n                        \r\n                        <hr className=\"line_separator\"></hr>\r\n                        <p style={{textAlign: \"center\"}}>The results of this session will be analyzed and applied to your next personalized session. \r\n                            <br/> <img src={ript_text} alt=\"ript\" className=\"ript_text\"></img> is commited to bettering your skills with our boxing algorithms!\r\n                        </p>\r\n                    </Collapsible>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SessionBox","import React from \"react\"\r\n\r\nclass FilterForm extends React.Component {\r\n    render() {\r\n        return(\r\n            <>\r\n                <h2 className=\"search_title\">Filter Results</h2>\r\n                <form className=\"session_search\">\r\n\r\n                    <div className=\"filter_category\">\r\n                        <h3>Category</h3>\r\n                        <div className=\"filter_input\">\r\n                            <input type=\"checkbox\" id=\"category_personalized\" checked={true}></input>\r\n                            <label for=\"category_personalized\">Personalized</label>\r\n                        </div>\r\n                        <div className=\"filter_input\">\r\n                            <input type=\"checkbox\" id=\"category_endurance\" checked={true}></input>\r\n                            <label for=\"category_endurance\">Endurance</label>\r\n                        </div>\r\n                        <div className=\"filter_input\">\r\n                            <input type=\"checkbox\" id=\"category_speed\" checked={true}></input>\r\n                            <label for=\"category_speed\">Speed</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"filter_category\">\r\n                        <h3>Date</h3>\r\n                        <div className=\"filter_input\">\r\n                            <input type=\"radio\" id=\"date_all\" name=\"date_select\" checked></input>\r\n                            <label for=\"date_all\">All Sessions</label>\r\n                        </div>\r\n                        <div className=\"filter_input\">\r\n                            <input type=\"radio\" id=\"date_month\" name=\"date_select\"></input>\r\n                            <label for=\"date_month\">This Month</label>\r\n                        </div>\r\n                        <div className=\"filter_input\">\r\n                            <input type=\"radio\" id=\"date_week\" name=\"date_select\"></input>\r\n                            <label for=\"date_week\">This Week</label>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"submit\">Filter</button>\r\n                </form>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterForm","import React from \"react\"\r\n\r\nimport \"../CSS/General.css\"\r\nimport \"../CSS/Box.css\"\r\nimport \"../CSS/Session/SessionAlt.css\" //Changed the CSS for vertical layout, still holding onto old one\r\nimport \"../CSS/Session/SessionFilter.css\"\r\n\r\nimport SessionBox from \"../Components/Sessions/SessionBox.js\"\r\nimport FilterForm from \"../Components/Sessions/FilterForm.js\"\r\n\r\nclass Sessions extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"main_container\">\r\n                <h1 className=\"page_title\">Sessions and Metrics</h1>\r\n                \r\n                <hr className=\"line_separator\"></hr>\r\n                <FilterForm></FilterForm>\r\n\r\n                {this.props.user.sessions.map( (session) => (\r\n                    <SessionBox\r\n                        key={session.session_id}\r\n                        data={session.metrics}\r\n                        datetime={session.datetime}\r\n                        duration={session.duration}\r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sessions","import React from \"react\"\r\n\r\nimport \"../CSS/General.css\"\r\n\r\n\r\nclass Sessions extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"main_container\">\r\n                <h1 className=\"page_title\">Trends and stuff</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sessions","import React from \"react\"\r\n\r\nimport \"../CSS/General.css\"\r\nimport \"../CSS/About.css\"\r\n\r\nimport ript_text from \"../Images/RIPT_Text.svg\"\r\n\r\nclass About extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"main_container\">\r\n                <h1 className=\"page_title\">About This Project</h1>\r\n\r\n                <h2>Overview</h2>\r\n                <p>The Robot Integrated Pad Trainer (<img src={ript_text} alt=\"ript\" className=\"ript_text\"></img>) is a device for helping boxers develop their offensive skills. The project uses a YOLOv7 computer vision model to observe and track the user with webcams, and identifies deficiencies in their skills. Once a training regime has been developed by a custom algorithm, pad training sessions can be conducted with the new regime. A gantry like system moves pads around for the user to interact with, sensing when they are hit before moving to a new location. This robotic emulation of a human pad trainer allows for more direct customization in the training, and is expandable and repeatable for any number of users and skill levels.</p>\r\n                <p>The Github for the project can be found <a href=\"https://www.github.com/brlnoble/RIPT_Capstone\" target=\"_blank\" rel=\"noreferrer\" style={{fontStyle: \"italic\",color: \"#777\"}}>here</a>.</p>\r\n\r\n                <h2>Prototype</h2>\r\n                <p>Below are images and GIFs of the prototype developed by the team.</p>\r\n                <div className=\"prototype_images\">\r\n                    <img className=\"sample_img\" src=\"https://github.com/brlnoble/RIPT_Capstone/blob/main/Pictures%20and%20Documents/Movement_Final_Face_On.gif?raw=true\" alt=\"Movement Face On\"></img>\r\n                    <img className=\"sample_img\" src=\"https://github.com/brlnoble/RIPT_Capstone/blob/main/Pictures%20and%20Documents/Movement_Final_Side.gif?raw=true\" alt=\"Movement Side\"></img>\r\n                    <img className=\"sample_img\" src=\"https://github.com/brlnoble/RIPT_Capstone/blob/main/Pictures%20and%20Documents/YOLO_Final.gif?raw=true\" alt=\"YOLO Model\"></img>\r\n                </div>\r\n\r\n                <div className=\"video_frame\">\r\n                    <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/QMfrOVIuLZo\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowFullScreen></iframe>\r\n                </div>\r\n\r\n                <h2>Meet the Team</h2>\r\n                <div className=\"team\">\r\n                    <div className=\"team_member\">\r\n                        <img className=\"person_pic\" src=\"https://media.licdn.com/dms/image/C4E03AQGG_IctTxaLUQ/profile-displayphoto-shrink_800_800/0/1651869250195?e=1682553600&v=beta&t=qmdkKuuHH5l8q7UoS7TbQdMsSNBywSbTkERCuexUAaI\" alt=\"Brandon\"></img>\r\n                        <h3>Brandon Noble</h3>\r\n                        <p>Electrical Engineering & Society</p>\r\n                        <hr/>\r\n                        <a href=\"https://www.linkedin.com/in/brlnoble\" target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>\r\n                        <br/>\r\n                        <a href=\"https://www.github.com/brlnoble\" target=\"_blank\" rel=\"noreferrer\">Github</a>\r\n                    </div>\r\n\r\n                    <div className=\"team_member\">\r\n                        <img className=\"person_pic\" src=\"https://media.licdn.com/dms/image/C5603AQHKFP9oDdw3Qw/profile-displayphoto-shrink_800_800/0/1517802772288?e=1682553600&v=beta&t=7KDN2YSPAxKd2MExycBdR_8EVp2_73O1b3Salfzwwjw\" alt=\"Labib\"></img>\r\n                        <h3>Labib Kazi</h3>\r\n                        <p>Electrical Engineering</p>\r\n                        <hr/>\r\n                        <a href=\"https://www.linkedin.com/in/alkazi/\" target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>\r\n                        <br/>\r\n                        <a href=\"https://www.github.com/kazia3\" target=\"_blank\" rel=\"noreferrer\">Github</a>\r\n                    </div>\r\n\r\n                    <div className=\"team_member\">\r\n                        <img className=\"person_pic\" src=\"https://media.licdn.com/dms/image/D5603AQE8ENTNaOqtSw/profile-displayphoto-shrink_800_800/0/1676244356117?e=1682553600&v=beta&t=0hX6vDOxhJ0nYgi3sN5ibLk__ZUwEiQuPVHtQnFSVQo\" alt=\"Labib\"></img>\r\n                        <h3>Jame Tran</h3>\r\n                        <p>Software Engineering</p>\r\n                        <hr/>\r\n                        <a href=\"https://www.linkedin.com/in/jame-tran/\" target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>\r\n                        <br/>\r\n                        <a href=\"https://www.github.com/JameTran\" target=\"_blank\" rel=\"noreferrer\">Github</a>\r\n                    </div>\r\n\r\n                    <div className=\"team_member\">\r\n                        <img className=\"person_pic\" src=\"https://media.licdn.com/dms/image/D5603AQEJ8s8phxbMMg/profile-displayphoto-shrink_800_800/0/1669326109089?e=1684972800&v=beta&t=VSoq6Mk-ZeQG4Hq1UqjEfUW5ZwmnSxGnkEH-xAQXPCQ\" alt=\"Labib\"></img>\r\n                        <h3>Hunter Ceranic</h3>\r\n                        <p>Mechatronics Engineering & Society</p>\r\n                        <hr/>\r\n                        <a href=\"https://www.linkedin.com/in/hunterceranic/\" target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>\r\n                        <br/>\r\n                        <a href=\"https://www.github.com/cer-hunter\" target=\"_blank\" rel=\"noreferrer\">Github</a>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import React from \"react\"\r\n\r\nimport \"../CSS/General.css\"\r\nimport \"../CSS/Box.css\"\r\nimport \"../CSS/SignIn.css\"\r\n\r\nclass SignIn extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"main_container\">\r\n                <div className=\"sign_in_container\">\r\n                    <div className=\"container\">\r\n                        <h1>Sign In</h1>\r\n                        <form className=\"sign_in_form\">\r\n                            <label for=\"userName\" className=\"sign_in_label\">User Name:</label>\r\n                            <input type=\"text\" id=\"userName\" className=\"sign_in_input\"></input>\r\n                            <br></br>\r\n                            <label for=\"passWord\" className=\"sign_in_label\">Password:</label>\r\n                            <input type=\"password\" id=\"password\"className=\"sign_in_input\"></input>\r\n                            <br></br>\r\n                            <button type=\"submit\">Sign In</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst pageStyle = {\r\n    height: \"45vh\",\r\n    margin: \"10%\",\r\n    marginTop: \"100px\",\r\n    textAlign: \"center\"\r\n};\r\n\r\nclass NoPage extends React.Component {\r\n    render() {\r\n        return(\r\n            <div style={pageStyle}>\r\n                <h2>Whoops! It appears this page didn't make it to the ring.</h2>\r\n                <Link to=\"/\" style={{textDecoration: \"None\",color: \"#777\"}}><h3>Click here to return home.</h3></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoPage","import React from \"react\";\r\n\r\nimport \"../CSS/General.css\"\r\nimport \"../CSS/About.css\"\r\n\r\nclass Technical extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"main_container\">\r\n                <h1 className=\"page_title\">About This Project</h1>\r\n\r\n                <p>Below is a video explaining the prototype and showcasing future plans should the project continue.</p>\r\n                <div className=\"video_frame\">\r\n                    <iframe width=\"800\" height=\"400\" src=\"https://www.youtube.com/embed/TRa0bQ9WmGY\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\r\n                </div>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Technical","const userData = {\r\n\r\n    //Basic profile information\r\n    profile: {\r\n        username: \"GingaNinja\",\r\n        first_name: \"Brandon\",\r\n        email: \"brandon@email.com\",\r\n        birthday: \"1999/03/28\",\r\n        membership: \"2022/09/12\",\r\n        session_num: \"88\", //this might not be needed\r\n        isorthodox: true,\r\n        picture: \"data:image/png;base64, \",\r\n    },\r\n\r\n    //Average values for all the metrics, displayed on profile\r\n    averageMetrics: {\r\n        forces: \"205 N\",\r\n        accuracy: \"99.9%\",\r\n        reaction: \"320 ms\",\r\n        form: \"67%\",\r\n        stability: \"75%\",\r\n    },\r\n\r\n    //The session object\r\n    sessions: [\r\n            {\r\n            \"session_id\": 80,\r\n            \"username\": \"GingaNinja\",\r\n            \"datetime\": \"2023/04/11 11:30:30/\",\r\n            \"duration\": \"00:00:30\",\r\n            \"metrics\": {\r\n            \"metrics\": {\r\n                \"hook\": {\r\n                \"force\": {\r\n                    \"avg\": 341.57,\r\n                    \"quads\": [\r\n                    350,\r\n                    337,\r\n                    350,\r\n                    337\r\n                    ]\r\n                },\r\n                \"reaction\": {\r\n                    \"avg\": 375.18,\r\n                    \"quads\": [\r\n                    325,\r\n                    400,\r\n                    325,\r\n                    400\r\n                    ]\r\n                },\r\n                \"accuracy\": {\r\n                    \"avg\": 100,\r\n                    \"quads\": [\r\n                    100,\r\n                    100,\r\n                    100,\r\n                    100\r\n                    ]\r\n                },\r\n                \"form\": {\r\n                    \"avg\": 66.75,\r\n                    \"quads\": [\r\n                    67,\r\n                    71,\r\n                    59,\r\n                    70\r\n                    ]\r\n                }\r\n                },\r\n                \"uppercut\": {\r\n                \"force\": {\r\n                    \"avg\": 255.75,\r\n                    \"quads\": [\r\n                    200,\r\n                    318,\r\n                    310,\r\n                    195\r\n                    ]\r\n                },\r\n                \"reaction\": {\r\n                    \"avg\": 356,\r\n                    \"quads\": [\r\n                    305,\r\n                    313,\r\n                    410,\r\n                    396\r\n                    ]\r\n                },\r\n                \"accuracy\": {\r\n                    \"avg\": 100,\r\n                    \"quads\": [\r\n                    100,\r\n                    100,\r\n                    100,\r\n                    100\r\n                    ]\r\n                },\r\n                \"form\": {\r\n                    \"avg\": 70.25,\r\n                    \"quads\": [\r\n                    71,\r\n                    64,\r\n                    66,\r\n                    80\r\n                    ]\r\n                }\r\n                },\r\n                \"straight\": {\r\n                \"force\": {\r\n                    \"avg\": 249,\r\n                    \"quads\": [\r\n                    190,\r\n                    211,\r\n                    301,\r\n                    294\r\n                    ]\r\n                },\r\n                \"reaction\": {\r\n                    \"avg\": 353,\r\n                    \"quads\": [\r\n                    306,\r\n                    401,\r\n                    384,\r\n                    321\r\n                    ]\r\n                },\r\n                \"accuracy\": {\r\n                    \"avg\": 100,\r\n                    \"quads\": [\r\n                    100,\r\n                    100,\r\n                    100,\r\n                    100\r\n                    ]\r\n                },\r\n                \"form\": {\r\n                    \"avg\": 67,\r\n                    \"quads\": [\r\n                    62,\r\n                    59,\r\n                    67,\r\n                    80\r\n                    ]\r\n                }\r\n                },\r\n                \"performance\": {\r\n                \"avg\": 75,\r\n                \"data\": [\r\n                    73.42,\r\n                    67.02,\r\n                    81.77,\r\n                    87.82,\r\n                    69.99,\r\n                    73.42,\r\n                    67.02,\r\n                    81.77,\r\n                    87.82,\r\n                    69.99,\r\n                    73.42,\r\n                    67.02,\r\n                    81.77,\r\n                    87.82,\r\n                    59.94,\r\n                    69.99\r\n                ]\r\n                }\r\n            }\r\n            }\r\n        },\r\n        {\r\n            \"session_id\": 70,\r\n            \"username\": \"GingaNinja\",\r\n            \"datetime\": \"2023/04/11 11:04:44/\",\r\n            \"duration\": \"00:00:30\",\r\n            \"metrics\": {\r\n            \"metrics\": {\r\n                \"hook\": {\r\n                \"force\": {\r\n                    \"avg\": 341.57,\r\n                    \"quads\": [\r\n                    350,\r\n                    337,\r\n                    350,\r\n                    337\r\n                    ]\r\n                },\r\n                \"reaction\": {\r\n                    \"avg\": 375.18,\r\n                    \"quads\": [\r\n                    325,\r\n                    400,\r\n                    325,\r\n                    400\r\n                    ]\r\n                },\r\n                \"accuracy\": {\r\n                    \"avg\": 100,\r\n                    \"quads\": [\r\n                    100,\r\n                    100,\r\n                    100,\r\n                    100\r\n                    ]\r\n                },\r\n                \"form\": {\r\n                    \"avg\": 66.75,\r\n                    \"quads\": [\r\n                    67,\r\n                    71,\r\n                    59,\r\n                    70\r\n                    ]\r\n                }\r\n                },\r\n                \"uppercut\": {\r\n                \"force\": {\r\n                    \"avg\": 255.75,\r\n                    \"quads\": [\r\n                    200,\r\n                    318,\r\n                    310,\r\n                    195\r\n                    ]\r\n                },\r\n                \"reaction\": {\r\n                    \"avg\": 356,\r\n                    \"quads\": [\r\n                    305,\r\n                    313,\r\n                    410,\r\n                    396\r\n                    ]\r\n                },\r\n                \"accuracy\": {\r\n                    \"avg\": 100,\r\n                    \"quads\": [\r\n                    100,\r\n                    100,\r\n                    100,\r\n                    100\r\n                    ]\r\n                },\r\n                \"form\": {\r\n                    \"avg\": 70.25,\r\n                    \"quads\": [\r\n                    71,\r\n                    64,\r\n                    66,\r\n                    80\r\n                    ]\r\n                }\r\n                },\r\n                \"straight\": {\r\n                \"force\": {\r\n                    \"avg\": 249,\r\n                    \"quads\": [\r\n                    190,\r\n                    211,\r\n                    301,\r\n                    294\r\n                    ]\r\n                },\r\n                \"reaction\": {\r\n                    \"avg\": 353,\r\n                    \"quads\": [\r\n                    306,\r\n                    401,\r\n                    384,\r\n                    321\r\n                    ]\r\n                },\r\n                \"accuracy\": {\r\n                    \"avg\": 100,\r\n                    \"quads\": [\r\n                    100,\r\n                    100,\r\n                    100,\r\n                    100\r\n                    ]\r\n                },\r\n                \"form\": {\r\n                    \"avg\": 67,\r\n                    \"quads\": [\r\n                    62,\r\n                    59,\r\n                    67,\r\n                    80\r\n                    ]\r\n                }\r\n                },\r\n                \"performance\": {\r\n                \"avg\": 75,\r\n                \"data\": [\r\n                    73.42,\r\n                    67.02,\r\n                    81.77,\r\n                    87.82,\r\n                    69.99,\r\n                    73.42,\r\n                    67.02,\r\n                    81.77,\r\n                    87.82,\r\n                    69.99,\r\n                    73.42,\r\n                    67.02,\r\n                    81.77,\r\n                    87.82,\r\n                    59.94,\r\n                    69.99\r\n                ]\r\n                }\r\n            }\r\n            }\r\n        },\r\n        {\r\n            \"session_id\": 69,\r\n            \"username\": \"GingaNinja\",\r\n            \"datetime\": \"2023/04/11 10:16:30/\",\r\n            \"duration\": \"00:00:30\",\r\n            \"metrics\": {\r\n            \"metrics\": {\r\n                \"hook\": {\r\n                \"force\": {\r\n                    \"avg\": 341.57,\r\n                    \"quads\": [\r\n                    350,\r\n                    337,\r\n                    350,\r\n                    337\r\n                    ]\r\n                },\r\n                \"reaction\": {\r\n                    \"avg\": 375.18,\r\n                    \"quads\": [\r\n                    325,\r\n                    400,\r\n                    325,\r\n                    400\r\n                    ]\r\n                },\r\n                \"accuracy\": {\r\n                    \"avg\": 100,\r\n                    \"quads\": [\r\n                    100,\r\n                    100,\r\n                    100,\r\n                    100\r\n                    ]\r\n                },\r\n                \"form\": {\r\n                    \"avg\": 66.75,\r\n                    \"quads\": [\r\n                    67,\r\n                    71,\r\n                    59,\r\n                    70\r\n                    ]\r\n                }\r\n                },\r\n                \"uppercut\": {\r\n                \"force\": {\r\n                    \"avg\": 255.75,\r\n                    \"quads\": [\r\n                    200,\r\n                    318,\r\n                    310,\r\n                    195\r\n                    ]\r\n                },\r\n                \"reaction\": {\r\n                    \"avg\": 356,\r\n                    \"quads\": [\r\n                    305,\r\n                    313,\r\n                    410,\r\n                    396\r\n                    ]\r\n                },\r\n                \"accuracy\": {\r\n                    \"avg\": 100,\r\n                    \"quads\": [\r\n                    100,\r\n                    100,\r\n                    100,\r\n                    100\r\n                    ]\r\n                },\r\n                \"form\": {\r\n                    \"avg\": 70.25,\r\n                    \"quads\": [\r\n                    71,\r\n                    64,\r\n                    66,\r\n                    80\r\n                    ]\r\n                }\r\n                },\r\n                \"straight\": {\r\n                \"force\": {\r\n                    \"avg\": 249,\r\n                    \"quads\": [\r\n                    190,\r\n                    211,\r\n                    301,\r\n                    294\r\n                    ]\r\n                },\r\n                \"reaction\": {\r\n                    \"avg\": 353,\r\n                    \"quads\": [\r\n                    306,\r\n                    401,\r\n                    384,\r\n                    321\r\n                    ]\r\n                },\r\n                \"accuracy\": {\r\n                    \"avg\": 100,\r\n                    \"quads\": [\r\n                    100,\r\n                    100,\r\n                    100,\r\n                    100\r\n                    ]\r\n                },\r\n                \"form\": {\r\n                    \"avg\": 67,\r\n                    \"quads\": [\r\n                    62,\r\n                    59,\r\n                    67,\r\n                    80\r\n                    ]\r\n                }\r\n                },\r\n                \"performance\": {\r\n                \"avg\": 75,\r\n                \"data\": [\r\n                    73.42,\r\n                    67.02,\r\n                    81.77,\r\n                    87.82,\r\n                    69.99,\r\n                    73.42,\r\n                    67.02,\r\n                    81.77,\r\n                    87.82,\r\n                    69.99,\r\n                    73.42,\r\n                    67.02,\r\n                    81.77,\r\n                    87.82,\r\n                    59.94,\r\n                    69.99\r\n                ]\r\n                }\r\n            }\r\n            }\r\n        }\r\n    ]\r\n}\r\n\r\nexport default userData","import ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Layout from \"./Pages/layout\"\r\nimport Home from \"./Pages/Home\"\r\nimport Profile from \"./Pages/Profile\"\r\nimport Sessions from \"./Pages/Sessions\"\r\nimport Trends from \"./Pages/Trends\"\r\nimport About from \"./Pages/About\"\r\nimport SignIn from \"./Pages/SignIn\"\r\nimport NoPage from \"./Pages/NoPage\"\r\nimport Technical from \"./Pages/Technical\"\r\n\r\n//This needs to be passed in by the backend\r\nimport defaultUser from \"./UserData/userData\";\r\n\r\n\r\n\r\nexport default function App() {\r\n  /*const [currentUser, setUser] = useState(defaultUser);\r\n  const getData = async () => {\r\n    await axios.get(\"http://localhost:8080/frontend/GingaNinja\").then((response) => {\r\n        //console.log(response.data);\r\n        setUser(response.data);\r\n    });\r\n  }\r\n\r\n  useEffect(() => {getData()}, [])\r\n  console.log(currentUser); */\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Layout />}>\r\n          <Route index element={<Home />} />\r\n          <Route path=\"/profile\" element={<Profile user={defaultUser}/>} />\r\n          <Route path=\"/sessions\" element={<Sessions user={defaultUser}/>} />\r\n          <Route path=\"/trends\" element={<Trends user={defaultUser}/>} />\r\n          <Route path=\"/about\" element={<About />} />\r\n          <Route path=\"/sign-in\" element={<SignIn/>} />\r\n          <Route path=\"/technical\" element={<Technical/>} />\r\n\r\n          <Route path=\"*\" element={<Home />} />\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"names":["e","module","exports","require","t","n","r","o","i","l","call","m","c","d","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","__esModule","create","bind","default","prototype","hasOwnProperty","p","s","resetWarningCache","a","Error","name","isRequired","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","assign","arguments","length","apply","this","iterator","constructor","configurable","writable","key","u","setPrototypeOf","__proto__","g","Reflect","construct","sham","Proxy","Boolean","valueOf","f","TypeError","h","ReferenceError","getPrototypeOf","b","innerRef","setState","height","scrollHeight","transition","concat","props","transitionTime","easing","isClosed","hasBeenOpened","inTransition","shouldOpenOnNextCycle","triggerDisabled","state","preventDefault","handleTriggerClick","accordionPosition","openCollapsible","onOpening","onTriggerOpening","closeCollapsible","onClosing","onTriggerClosing","target","onClose","overflow","overflowWhenOpen","onOpen","timeout","contentId","contentElementId","Date","now","triggerId","triggerElementProps","id","open","shouldSwitchAutoOnNextCycle","continueOpenCollapsible","window","clearTimeout","setTimeout","transitionCloseTime","triggerSibling","classParentString","createElement","className","WebkitTransition","msTransition","triggerWhenOpen","trigger","contentContainerTagName","triggerTagName","lazyRender","children","contentOuterClassName","contentInnerClassName","triggerClassName","triggerOpenedClassName","openedClassName","trim","containerElementProps","onClick","style","triggerStyle","onKeyPress","toLowerCase","tabIndex","role","renderNonClickableTriggerElement","onTransitionEnd","handleTransitionEnd","ref","setInnerRef","hidden","contentHiddenWhenClosed","Component","propTypes","defaultProps","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","add","ia","document","ja","ka","la","ma","v","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","type","sanitizeURL","removeEmptyString","z","split","forEach","ra","sa","toUpperCase","ta","slice","pa","isNaN","qa","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","A","Ma","stack","match","Na","Oa","prepareStackTrace","set","k","displayName","includes","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","Array","isArray","fb","options","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","toString","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","indexOf","setProperty","keys","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","push","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","addEventListener","removeEventListener","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","current","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","Math","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","data","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","String","fromCharCode","code","location","repeat","locale","which","Rd","Td","width","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","password","range","search","tel","text","time","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","href","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","listener","D","of","has","pf","qf","rf","random","sf","capture","passive","J","x","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","deletions","Cg","pendingProps","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","next","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","payload","callback","dh","K","eh","fh","gh","q","y","hh","ih","jh","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","_owner","_stringRef","th","join","uh","vh","index","wh","xh","yh","implementation","zh","Ah","done","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","message","digest","Li","Mi","console","error","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","version","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","err","__self","__source","Fragment","jsx","jsxs","forceUpdate","escape","_status","_result","Children","map","count","toArray","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","pop","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","navigator","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","floor","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","leafPrototypes","getProto","obj","ns","def","getOwnPropertyNames","definition","prop","_arrayWithHoles","arr","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","minLen","from","_nonIterableRest","_i","_s","_e","_x","_r","_arr","_n","_d","Action","_iterableToArray","iter","Constructor","_typeof","_toPropertyKey","arg","hint","prim","toPrimitive","res","Number","_defineProperties","descriptor","protoProps","staticProps","_setPrototypeOf","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","_assertThisInitialized","self","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","_construct","Parent","args","Class","Function","_wrapNativeSuper","_cache","fn","Wrapper","allowArrayLike","it","normalCompletion","didErr","step","_e2","ResultType","PopStateEventType","getHistoryState","usr","idx","createLocation","to","pathname","hash","parsePath","substr","_ref","path","parsedPath","hashIndex","searchIndex","getUrlBasedHistory","getLocation","createHref","validateLocation","v5Compat","globalHistory","history","Pop","getIndex","handlePop","nextIndex","delta","createURL","origin","createPath","invariant","URL","replaceState","listen","encodeLocation","Push","historyState","pushState","Replace","go","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","score","siblings","every","compareIndexes","routesMeta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","_route$path","explodeOptionalSegments","exploded","segments","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","isSplat","initialScore","some","filter","reduce","segment","branch","matchedParams","matchedPathname","remainingPathname","matchPath","params","pathnameBase","normalizePathname","pattern","warning","paramNames","regexpSource","_","paramName","matcher","RegExp","compilePath","captureGroups","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","startIndex","nextChar","cond","warn","getInvalidPathError","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","AbortedDeferredError","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","React","checkIfSnapshotChanged","inst","latestGetSnapshot","prevValue","nextValue","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","RouteErrorContext","useInRouterContext","useLocation","useNavigate","routePathnamesJson","activeRef","navigate","parse","relative","OutletContext","useResolvedPath","_temp2","DefaultErrorElement","useDataRouterState","DataRouterStateHook","UseRouteError","routeId","useCurrentRouteId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","DataRouterHook","RenderErrorBoundary","errorInfo","routeContext","component","RenderedRoute","dataRouterContext","static","staticContext","errorElement","_deepestRenderedBoundaryId","_renderMatches","parentMatches","dataRouterState","renderedMatches","errorIndex","findIndex","reduceRight","getChildren","hookName","useRouteContext","thisRoute","AwaitRenderStatus","Outlet","useOutlet","Route","_props","Router","_ref4","basenameProp","locationProp","navigationType","NavigationType","staticProp","navigationContext","trailingPathname","Routes","_ref5","dataRouterStateContext","routeMatch","parentParams","parentPathnameBase","locationFromContext","parsedLocationArg","useRoutes","router","createRoutesFromChildren","neverSettledPromise","treePath","loader","hasErrorBoundary","shouldRevalidate","handle","BrowserRouter","historyRef","createBrowserHistory","isBrowser","Link","absoluteHref","reloadDocument","preventScrollReset","isExternal","currentUrl","targetUrl","protocol","_temp","joinedPathname","useHref","internalOnClick","replaceProp","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","NavLink","ariaCurrentProp","classNameProp","styleProp","routerState","nextLocationPathname","navigation","isActive","isPending","ariaCurrent","active_link","textDecoration","unactive_link","Navbar","logo","alt","ript_text","user_icon_unactive","menu_icon","Footer","styles","rel","github_icon","ListBox","title_text","show_text","item","redirect","button_text","profile","sessions","progress","Home","ProfileBox","user","picture","first_name","username","birthday","membership","session_num","stance","isorthodox","AverageBox","forces","accuracy","reaction","stability","Profile","averageMetrics","getMonthName","monthNumber","setMonth","parseInt","toLocaleString","duration","expand_icon","QuadBox","quads","MetricBreakdown","metricType","metrics","avg","units","PunchMetrics","punch","force","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread2","getOwnPropertyDescriptors","defineProperties","_superPropBase","property","_get","receiver","desc","round","lim","max","p2b","n2b","b2n","n2p","map$1","hex","h1","h2","eq","hexString","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","str","exec","p1","p2","hwb2rgb","hsv2rgb","names","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","unpacked","tkeys","unpack","transparent","RGB_RE","pow","modHSL","ratio","tmp","clone","proto","fromObject","functionParse","rgbParse","Color","ret","hexParse","_rgb","_valid","hslString","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","noop","uid","isNullOrUndef","isObject","isNumberFinite","isFinite","finiteOrDefault","valueOrDefault","toDimension","dimension","parseFloat","thisArg","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","klen","isValidKey","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","keyResolvers","_getKeyResolver","part","_splitKey","resolveObjectKey","_capitalize","defined","isFunction","setsEqual","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","fraction","isNumber","_setMinAndMaxByKey","toRadians","degrees","toDegrees","radians","_decimalPlaces","isFiniteNumber","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","stub","_chartjs","_arrayUnique","items","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","points","animationsDisabled","pointCount","_sorted","iScale","_parsed","axis","getUserBounds","minDefined","maxDefined","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","saturate","darken","numbers","colors","intlCache","formatNumber","num","cacheKey","formatter","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","notation","chart","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","overrides","descriptors","getScope","root","scope","Defaults","_descriptors","_appliers","borderColor","datasets","devicePixelRatio","platform","getDevicePixelRatio","elements","events","font","family","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","intersect","includeInvisible","maintainAspectRatio","onHover","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","local","appliers","_scriptable","_indexable","_fallback","defaults","loop","properties","active","resize","show","animations","visible","hide","autoPadding","right","bottom","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","longest","textWidth","measureText","_longestText","arrayOfThings","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","line","opts","lines","strokeColor","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","_readValueToProps","objProps","read","toTRBL","toTRBLCorners","toPadding","toFont","toFontString","inputs","info","cacheable","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","deleteProperty","_keys","_cached","_resolveWithPrefixes","_scopes","getKeysFromAllScopes","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_subProxy","_stack","setContext","isScriptable","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","resolver","_resolveArray","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","positions","getPositionedStyle","suffix","pos","getRelativePosition","borderBox","boxSizing","paddings","borders","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","readUsedSize","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","prevTextDirection","restoreTextDirection","propertyFn","between","normalize","normalizeSegment","_boundSegment","startBound","endBound","getSegment","inside","subStart","shouldStart","startIsBefore","shouldStop","endIsBefore","_boundSegments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","callbacks","numSteps","initial","currentStep","_refresh","_update","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","helpersColor","valid","mix","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","animator","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","curr","$bar","visibleMetas","getAllScaleValues","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","init","formats","diff","startOf","endOf","members","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","_layers","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","createAttachObserver","observer","MutationObserver","entries","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","newTicks","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","notify","hook","_createDescriptors","plugin","callCallback","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","_stop","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","parseBorderRadius","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","maxAreaPoint","maxArea","nextA","bucketWidth","sampledIndex","endIndex","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","tgt","subBounds","fillSource","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","cursor","defaultColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","handleEvent","onLeave","isListened","hoveredItem","sameItem","_element","afterEvent","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","titleBlock","createTitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","defaultDatasetIdKey","reforwardRef","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","chartRef","renderChart","ChartJS","destroyChart","nextOptions","setOptions","createTypedChart","Line","LineChart","chartData","myData","pointRadius","MetricPerformance","SessionBox","SessionsBoxHeader","straight","uppercut","FilterForm","Sessions","session","session_id","About","frameborder","allow","allowFullScreen","SignIn","pageStyle","marginTop","Technical","allowfullscreen","App","defaultUser","Trends","ReactDOM"],"sourceRoot":""}